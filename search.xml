<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一 谷歌Play Store App分析</title>
      <link href="/2020/07/07/%E4%B8%80-%E8%B0%B7%E6%AD%8CPlay-Store-App%E5%88%86%E6%9E%90/"/>
      <url>/2020/07/07/%E4%B8%80-%E8%B0%B7%E6%AD%8CPlay-Store-App%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="Google-Play-Store的App数据分析"><a href="#Google-Play-Store的App数据分析" class="headerlink" title="Google Play Store的App数据分析"></a>Google Play Store的App数据分析</h1><p>google play store 是在国外下载安卓应用程序的商店，今天的案例是对商店中关于app的信息进行分析，分析后可以辅助app市场和开发设计,其中分析的关键是掌握数据清洗的方法。推荐使用 Jupyter Notebook进行学习。</p><p><em>公号回复：   获取数据 ‘googleplaystore.csv’</em></p><p><img src="/" alt="image-20200624121006193" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200624121006193.png"></p><h2 id="一、读取数据并理解含义"><a href="#一、读取数据并理解含义" class="headerlink" title="一、读取数据并理解含义"></a>一、读取数据并理解含义</h2><p>首先我们来观察一下数据，如下图所示，第一行是列名，含有App程序名称，Category类别，Rating评分，Reviews评论数，Size程序大小，Installs安装数量等等，总共有1w条数据。</p><p><img src="/" alt="image-20200616035217074" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616035217074.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">'./googleplaystore.csv'</span>,usecols=(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)) <span class="comment"># usecols取7列数据作为分析</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.head() <span class="comment"># 观察前几行数据 了解字段含义</span></span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>App</th>      <th>Category</th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>      <th>Type</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>Photo Editor &amp; Candy Camera &amp; Grid &amp; ScrapBook</td>      <td>ART_AND_DESIGN</td>      <td>4.1</td>      <td>159</td>      <td>19M</td>      <td>10,000+</td>      <td>Free</td>    </tr>    <tr>      <th>1</th>      <td>Coloring book moana</td>      <td>ART_AND_DESIGN</td>      <td>3.9</td>      <td>967</td>      <td>14M</td>      <td>500,000+</td>      <td>Free</td>    </tr>    <tr>      <th>2</th>      <td>U Launcher Lite – FREE Live Cool Themes, Hide ...</td>      <td>ART_AND_DESIGN</td>      <td>4.7</td>      <td>87510</td>      <td>8.7M</td>      <td>5,000,000+</td>      <td>Free</td>    </tr>    <tr>      <th>3</th>      <td>Sketch - Draw &amp; Paint</td>      <td>ART_AND_DESIGN</td>      <td>4.5</td>      <td>215644</td>      <td>25M</td>      <td>50,000,000+</td>      <td>Free</td>    </tr>    <tr>      <th>4</th>      <td>Pixel Draw - Number Art Coloring Book</td>      <td>ART_AND_DESIGN</td>      <td>4.3</td>      <td>967</td>      <td>2.8M</td>      <td>100,000+</td>      <td>Free</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.describe() <span class="comment"># 观察数据情况 发现只有rating列有描述统计 其他列的数据类型是字符串</span></span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>9367.000000</td>    </tr>    <tr>      <th>mean</th>      <td>4.193338</td>    </tr>    <tr>      <th>std</th>      <td>0.537431</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>4.000000</td>    </tr>    <tr>      <th>50%</th>      <td>4.300000</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>    </tr>    <tr>      <th>max</th>      <td>19.000000</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.count() <span class="comment"># 统计每一列的行数 发现Rating行数少了一千多，Type少了一行，接下来对数据进行清洗</span></span><br></pre></td></tr></table></figure><pre><code>App         10841Category    10841Rating       9367Reviews     10841Size        10841Installs    10841Type        10840dtype: int64</code></pre><h2 id="二、数据清洗"><a href="#二、数据清洗" class="headerlink" title="二、数据清洗"></a>二、数据清洗</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一列一列进行分析，对第一列 App 进行清洗，由于Rating数小于App数，因此猜测App有重复值</span></span><br><span class="line">pd.unique(df[<span class="string">'App'</span>]).size </span><br><span class="line"><span class="comment"># 发现App的unique行数是9660，说明有重复值，但是在第一列我们先不进行去重，因为可能有App名重名的情况</span></span><br></pre></td></tr></table></figure><pre><code>9660</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Category列处理</span></span><br><span class="line"></span><br><span class="line">df[<span class="string">'Category'</span>].value_counts(dropna=<span class="literal">False</span>) <span class="comment"># 统计Category的信息，将空值也统计进来</span></span><br></pre></td></tr></table></figure><pre><code>FAMILY                 1972GAME                   1144TOOLS                   843MEDICAL                 463BUSINESS                460PRODUCTIVITY            424PERSONALIZATION         392COMMUNICATION           387SPORTS                  384LIFESTYLE               382FINANCE                 366HEALTH_AND_FITNESS      341PHOTOGRAPHY             335SOCIAL                  295NEWS_AND_MAGAZINES      283SHOPPING                260TRAVEL_AND_LOCAL        258DATING                  234BOOKS_AND_REFERENCE     231VIDEO_PLAYERS           175EDUCATION               156ENTERTAINMENT           149MAPS_AND_NAVIGATION     137FOOD_AND_DRINK          127HOUSE_AND_HOME           88LIBRARIES_AND_DEMO       85AUTO_AND_VEHICLES        85WEATHER                  82ART_AND_DESIGN           65EVENTS                   64COMICS                   60PARENTING                60BEAUTY                   531.9                       1Name: Category, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发现类别名，没有空值；</span></span><br><span class="line"><span class="comment"># 末尾一行的类别为1.9出现异常值，挑选出来进行观察</span></span><br><span class="line">df[df[<span class="string">'Category'</span>] == <span class="string">'1.9'</span>]</span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>App</th>      <th>Category</th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>      <th>Type</th>    </tr>  </thead>  <tbody>    <tr>      <th>10472</th>      <td>Life Made WI-Fi Touchscreen Photo Frame</td>      <td>1.9</td>      <td>19.0</td>      <td>3.0M</td>      <td>1,000+</td>      <td>Free</td>      <td>0</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 观察数据，Category为1.9 Rating为19（rating一般为1-5分）Size为1000+（应该是xxM） Type应该是Free </span></span><br><span class="line"><span class="comment"># 判断这一行，缺失了category，应该把1.9往后的数据往后移动一行，并在页面上查找到类别补充上去</span></span><br><span class="line"><span class="comment"># 由于补充信息并移动列操作比较繁琐，数据有一万多行，因为删除这一行，影响很小</span></span><br><span class="line">df.drop(index=<span class="number">10472</span>, inplace=<span class="literal">True</span>) <span class="comment"># inplace = True：不创建新的对象，直接对原始对象进行修改</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Rating列处理</span></span><br><span class="line">df[<span class="string">'Rating'</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>NaN    14744.4    11094.3    10764.5    10384.2     9524.6     8234.1     7084.0     5684.7     4993.9     3863.8     3035.0     2743.7     2394.8     2343.6     1743.5     1633.4     1283.3     1024.9      873.0      833.1      693.2      642.9      452.8      422.7      252.6      252.5      212.3      202.4      191.0      162.2      141.9      132.0      121.7       81.8       82.1       81.6       41.5       31.4       31.2       1Name: Rating, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Rating的分布都是在[0-5]之间，数据没有问题，但是NaN空值有1474个，影响较大，需要进行处理，在这里给NaN赋上平均值;</span></span><br><span class="line">df[<span class="string">'Rating'</span>].fillna(value=df[<span class="string">'Rating'</span>].mean(), inplace=<span class="literal">True</span>) <span class="comment"># fillna()函数，对NaN进行赋值</span></span><br><span class="line">df[<span class="string">'Rating'</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>4.191757    14744.400000    11094.300000    10764.500000    10384.200000     9524.600000     8234.100000     7084.000000     5684.700000     4993.900000     3863.800000     3035.000000     2743.700000     2394.800000     2343.600000     1743.500000     1633.400000     1283.300000     1024.900000      873.000000      833.100000      693.200000      642.900000      452.800000      422.700000      252.600000      252.500000      212.300000      202.400000      191.000000      162.200000      141.900000      132.000000      121.800000       81.700000       82.100000       81.600000       41.500000       31.400000       31.200000       1Name: Rating, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reviews列处理</span></span><br><span class="line">df[<span class="string">'Reviews'</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>0         5961         2722         2143         1754         1375         1086          977          908          749          6510         6412         6011         5213         4917         4819         4114         4116         3521         3520         3515         3130         3024         3025         3038         2918         2722         2623         2527         2533         24         ... 127229      12159        1157264      16826        121262       137607       171269       167071       124215       163624       110753       1159455      172596       18191        1258556      110672       1454412      156065       142329       184114       171432       1815893      1654419      19562        1580         12976        118478       173821       11740        1354         1Name: Reviews, Length: 6001, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reviews 每个app评论数的分布非常广，评论为0的情况最多，有596个</span></span><br><span class="line"><span class="comment"># 之前使用describe函数，并没有出现reviews的信息，这一列中的数据可能含有字符串</span></span><br><span class="line">df[<span class="string">'Reviews'</span>].str.isnumeric().sum()</span><br></pre></td></tr></table></figure><pre><code>10840</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10840个数值型数据，之前在category列中删除一行后，说明reviews列剩下的都是数值型的数据</span></span><br><span class="line"><span class="comment"># 也可以进行验证是否存在非数值型数据</span></span><br><span class="line">df[-df[<span class="string">'Reviews'</span>].str.isnumeric()]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发现都是数值型数据，但是describe函数还是没有出现reviews的描述</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10840.000000</td>    </tr>    <tr>      <th>mean</th>      <td>4.191757</td>    </tr>    <tr>      <th>std</th>      <td>0.478907</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>    </tr>    <tr>      <th>25%</th>      <td>4.100000</td>    </tr>    <tr>      <th>50%</th>      <td>4.200000</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统一将数据格式转换</span></span><br><span class="line">df[<span class="string">'Reviews'</span>] = df[<span class="string">'Reviews'</span>].astype(<span class="string">'i8'</span>) <span class="comment"># int8</span></span><br><span class="line">df.describe()</span><br><span class="line"><span class="comment"># 最大的评论数有7.815831e+07 7.8乘以10的7次方，也就是百万次，最小是0，没有出现负值，数据合理</span></span><br></pre></td></tr></table></figure><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10840.000000</td>      <td>1.084000e+04</td>    </tr>    <tr>      <th>mean</th>      <td>4.191757</td>      <td>4.441529e+05</td>    </tr>    <tr>      <th>std</th>      <td>0.478907</td>      <td>2.927761e+06</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000e+00</td>    </tr>    <tr>      <th>25%</th>      <td>4.100000</td>      <td>3.800000e+01</td>    </tr>    <tr>      <th>50%</th>      <td>4.200000</td>      <td>2.094000e+03</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>      <td>5.477550e+04</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>      <td>7.815831e+07</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Size的清洗处理</span></span><br><span class="line">df[<span class="string">'Size'</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>Varies with device    169511M                    19812M                    19614M                    19413M                    19115M                    18417M                    16019M                    15426M                    14916M                    14925M                    14320M                    13921M                    13824M                    13610M                    13618M                    13323M                    11722M                    11429M                    10327M                     9728M                     9530M                     8433M                     793.3M                    7737M                     7635M                     7231M                     702.9M                    692.3M                    682.5M                    68                      ... 245k                     1860k                     167k                      1942k                     1629k                     1940k                     1208k                     1787k                     1785k                     114k                      1921k                     1116k                     1234k                     1378k                     1865k                     1226k                     1122k                     1222k                     1400k                     1191k                     1549k                     1642k                     1209k                     1778k                     1540k                     1240k                     1663k                     1220k                     111k                      1485k                     1Name: Size, Length: 461, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Varies with device    1695 ，值不确定，因此不方便计算，同均值代替</span></span><br><span class="line"><span class="comment"># 计算时，Size带有M和K的单位，不方便计算，因此需要去掉</span></span><br><span class="line">df[<span class="string">'Size'</span>] = df[<span class="string">'Size'</span>].str.replace(<span class="string">'M'</span>,<span class="string">'e+6'</span>)</span><br><span class="line">df[<span class="string">'Size'</span>] = df[<span class="string">'Size'</span>].str.replace(<span class="string">'k'</span>,<span class="string">'e+3'</span>)</span><br><span class="line"><span class="comment"># 尝试转换数据类型，此时转换报错，还有字符串</span></span><br><span class="line"><span class="comment"># df['Size'].astype('f8')</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个字符串判断是否可以转换</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_convertable</span><span class="params">(v)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        float(v)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment"># 查看不能转换的字符串分布</span></span><br><span class="line">df[<span class="string">'Size'</span>].apply(is_convertable)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看不能转换的字符串分布 即含有false的项</span></span><br><span class="line">temp = df[<span class="string">'Size'</span>].apply(is_convertable) </span><br><span class="line">df[<span class="string">'Size'</span>][-temp].value_counts()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换剩下的字符串</span></span><br><span class="line">df[<span class="string">'Size'</span>] = df[<span class="string">'Size'</span>].str.replace(<span class="string">'Varies with device'</span>, <span class="string">'0'</span>)</span><br><span class="line"><span class="comment"># 在看下是不是还有没转换的字符串</span></span><br><span class="line">temp = df[<span class="string">'Size'</span>].apply(is_convertable) </span><br><span class="line">df[<span class="string">'Size'</span>][-temp].value_counts()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换类型</span></span><br><span class="line"><span class="comment"># e+5这种格式使用astype直接转为int有问题，如果想转成int，可以先转成f8，再转i8 </span></span><br><span class="line">df[<span class="string">'Size'</span>] = df[<span class="string">'Size'</span>].astype(<span class="string">'f8'</span>).astype(<span class="string">'i8'</span>)</span><br><span class="line"><span class="comment"># 将Size为0的填充为平均数</span></span><br><span class="line">df[<span class="string">'Size'</span>].replace(<span class="number">0</span>, df[<span class="string">'Size'</span>].mean(), inplace=<span class="literal">True</span>) </span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10840.000000</td>      <td>1.084000e+04</td>      <td>1.084000e+04</td>      <td>1.084000e+04</td>    </tr>    <tr>      <th>mean</th>      <td>4.191757</td>      <td>4.441529e+05</td>      <td>2.099045e+07</td>      <td>1.546434e+07</td>    </tr>    <tr>      <th>std</th>      <td>0.478907</td>      <td>2.927761e+06</td>      <td>2.078345e+07</td>      <td>8.502936e+07</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000e+00</td>      <td>8.500000e+03</td>      <td>0.000000e+00</td>    </tr>    <tr>      <th>25%</th>      <td>4.100000</td>      <td>3.800000e+01</td>      <td>5.900000e+06</td>      <td>1.000000e+03</td>    </tr>    <tr>      <th>50%</th>      <td>4.200000</td>      <td>2.094000e+03</td>      <td>1.800000e+07</td>      <td>1.000000e+05</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>      <td>5.477550e+04</td>      <td>2.600000e+07</td>      <td>5.000000e+06</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>      <td>7.815831e+07</td>      <td>1.000000e+08</td>      <td>1.000000e+09</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Installs数据清洗</span></span><br><span class="line"><span class="comment"># 先查看分布，数值中带有逗号和加号</span></span><br><span class="line">df[<span class="string">'Installs'</span>].value_counts()</span><br></pre></td></tr></table></figure><pre><code>1,000,000+        157910,000,000+       1252100,000+          116910,000+           10541,000+             9075,000,000+         752100+               719500,000+           53950,000+            4795,000+             477100,000,000+       40910+                386500+               33050,000,000+        28950+                2055+                  82500,000,000+        721+                  671,000,000,000+      580+                  140                    1Name: Installs, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分布不广，直接替换 + 和 ，号</span></span><br><span class="line">df[<span class="string">'Installs'</span>] = df[<span class="string">'Installs'</span>].str.replace(<span class="string">'+'</span>, <span class="string">''</span>)</span><br><span class="line">df[<span class="string">'Installs'</span>] = df[<span class="string">'Installs'</span>].str.replace(<span class="string">','</span>, <span class="string">''</span>)</span><br><span class="line"><span class="comment"># 转换类型</span></span><br><span class="line">df[<span class="string">'Installs'</span>] = df[<span class="string">'Installs'</span>].astype(<span class="string">'i8'</span>) </span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>10840.000000</td>      <td>1.084000e+04</td>      <td>1.084000e+04</td>      <td>1.084000e+04</td>    </tr>    <tr>      <th>mean</th>      <td>4.191757</td>      <td>4.441529e+05</td>      <td>2.099045e+07</td>      <td>1.546434e+07</td>    </tr>    <tr>      <th>std</th>      <td>0.478907</td>      <td>2.927761e+06</td>      <td>2.078345e+07</td>      <td>8.502936e+07</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000e+00</td>      <td>8.500000e+03</td>      <td>0.000000e+00</td>    </tr>    <tr>      <th>25%</th>      <td>4.100000</td>      <td>3.800000e+01</td>      <td>5.900000e+06</td>      <td>1.000000e+03</td>    </tr>    <tr>      <th>50%</th>      <td>4.200000</td>      <td>2.094000e+03</td>      <td>1.800000e+07</td>      <td>1.000000e+05</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>      <td>5.477550e+04</td>      <td>2.600000e+07</td>      <td>5.000000e+06</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>      <td>7.815831e+07</td>      <td>1.000000e+08</td>      <td>1.000000e+09</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Type处理</span></span><br><span class="line">df[<span class="string">'Type'</span>].value_counts(dropna=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>Free    10039Paid      800NaN         1Name: Type, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 有一行是NaN，最简单的做法 需要找出index并删除</span></span><br><span class="line">df[df[<span class="string">'Type'</span>].isnull()]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>App</th>      <th>Category</th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>      <th>Type</th>    </tr>  </thead>  <tbody>    <tr>      <th>9148</th>      <td>Command &amp; Conquer: Rivals</td>      <td>FAMILY</td>      <td>4.191757</td>      <td>0</td>      <td>18152090</td>      <td>0</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除这条数据</span></span><br><span class="line">df.drop(index=<span class="number">9148</span>, inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最后其他列都清洗完毕后，对App去重</span></span><br><span class="line">df.drop_duplicates(<span class="string">'App'</span>,inplace = <span class="literal">True</span>)</span><br><span class="line">df.count()</span><br></pre></td></tr></table></figure><pre><code>App         9658Category    9658Rating      9658Reviews     9658Size        9658Installs    9658Type        9658dtype: int64</code></pre><h2 id="三、-数据分析-维度分析和相关性分析"><a href="#三、-数据分析-维度分析和相关性分析" class="headerlink" title="三、 数据分析-维度分析和相关性分析"></a>三、 数据分析-维度分析和相关性分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以上数据清洗完成，接下来进行分析</span></span><br><span class="line"><span class="comment"># 整体情况</span></span><br><span class="line">df.describe()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>9658.000000</td>      <td>9.658000e+03</td>      <td>9.658000e+03</td>      <td>9.658000e+03</td>    </tr>    <tr>      <th>mean</th>      <td>4.176046</td>      <td>2.166150e+05</td>      <td>2.011053e+07</td>      <td>7.778312e+06</td>    </tr>    <tr>      <th>std</th>      <td>0.494383</td>      <td>1.831413e+06</td>      <td>2.040865e+07</td>      <td>5.376100e+07</td>    </tr>    <tr>      <th>min</th>      <td>1.000000</td>      <td>0.000000e+00</td>      <td>8.500000e+03</td>      <td>0.000000e+00</td>    </tr>    <tr>      <th>25%</th>      <td>4.000000</td>      <td>2.500000e+01</td>      <td>5.300000e+06</td>      <td>1.000000e+03</td>    </tr>    <tr>      <th>50%</th>      <td>4.200000</td>      <td>9.670000e+02</td>      <td>1.600000e+07</td>      <td>1.000000e+05</td>    </tr>    <tr>      <th>75%</th>      <td>4.500000</td>      <td>2.940800e+04</td>      <td>2.500000e+07</td>      <td>1.000000e+06</td>    </tr>    <tr>      <th>max</th>      <td>5.000000</td>      <td>7.815831e+07</td>      <td>1.000000e+08</td>      <td>1.000000e+09</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择维度进行分析 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以Category类别为维度，分析哪些类别的App的最受欢迎</span></span><br><span class="line"><span class="comment"># 类别的个数</span></span><br><span class="line">df.Category.unique().size</span><br></pre></td></tr></table></figure><pre><code>33</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每个分类的App数量，排序，可以得出哪些分类的app最受开发者欢迎 </span></span><br><span class="line">df.groupby(<span class="string">'Category'</span>).count().sort_values(<span class="string">'App'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>App</th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>      <th>Type</th>    </tr>    <tr>      <th>Category</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>FAMILY</th>      <td>1831</td>      <td>1831</td>      <td>1831</td>      <td>1831</td>      <td>1831</td>      <td>1831</td>    </tr>    <tr>      <th>GAME</th>      <td>959</td>      <td>959</td>      <td>959</td>      <td>959</td>      <td>959</td>      <td>959</td>    </tr>    <tr>      <th>TOOLS</th>      <td>827</td>      <td>827</td>      <td>827</td>      <td>827</td>      <td>827</td>      <td>827</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>420</td>      <td>420</td>      <td>420</td>      <td>420</td>      <td>420</td>      <td>420</td>    </tr>    <tr>      <th>MEDICAL</th>      <td>395</td>      <td>395</td>      <td>395</td>      <td>395</td>      <td>395</td>      <td>395</td>    </tr>    <tr>      <th>PERSONALIZATION</th>      <td>376</td>      <td>376</td>      <td>376</td>      <td>376</td>      <td>376</td>      <td>376</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>374</td>      <td>374</td>      <td>374</td>      <td>374</td>      <td>374</td>      <td>374</td>    </tr>    <tr>      <th>LIFESTYLE</th>      <td>369</td>      <td>369</td>      <td>369</td>      <td>369</td>      <td>369</td>      <td>369</td>    </tr>    <tr>      <th>FINANCE</th>      <td>345</td>      <td>345</td>      <td>345</td>      <td>345</td>      <td>345</td>      <td>345</td>    </tr>    <tr>      <th>SPORTS</th>      <td>325</td>      <td>325</td>      <td>325</td>      <td>325</td>      <td>325</td>      <td>325</td>    </tr>    <tr>      <th>COMMUNICATION</th>      <td>315</td>      <td>315</td>      <td>315</td>      <td>315</td>      <td>315</td>      <td>315</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>288</td>      <td>288</td>      <td>288</td>      <td>288</td>      <td>288</td>      <td>288</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>281</td>      <td>281</td>      <td>281</td>      <td>281</td>      <td>281</td>      <td>281</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>254</td>      <td>254</td>      <td>254</td>      <td>254</td>      <td>254</td>      <td>254</td>    </tr>    <tr>      <th>SOCIAL</th>      <td>239</td>      <td>239</td>      <td>239</td>      <td>239</td>      <td>239</td>      <td>239</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>222</td>      <td>222</td>      <td>222</td>      <td>222</td>      <td>222</td>      <td>222</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>219</td>      <td>219</td>      <td>219</td>      <td>219</td>      <td>219</td>      <td>219</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>202</td>      <td>202</td>      <td>202</td>      <td>202</td>      <td>202</td>      <td>202</td>    </tr>    <tr>      <th>DATING</th>      <td>171</td>      <td>171</td>      <td>171</td>      <td>171</td>      <td>171</td>      <td>171</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>163</td>      <td>163</td>      <td>163</td>      <td>163</td>      <td>163</td>      <td>163</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>131</td>      <td>131</td>      <td>131</td>      <td>131</td>      <td>131</td>      <td>131</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>119</td>      <td>119</td>      <td>119</td>      <td>119</td>      <td>119</td>      <td>119</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>112</td>      <td>112</td>      <td>112</td>      <td>112</td>      <td>112</td>      <td>112</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>102</td>      <td>102</td>      <td>102</td>      <td>102</td>      <td>102</td>      <td>102</td>    </tr>    <tr>      <th>AUTO_AND_VEHICLES</th>      <td>85</td>      <td>85</td>      <td>85</td>      <td>85</td>      <td>85</td>      <td>85</td>    </tr>    <tr>      <th>LIBRARIES_AND_DEMO</th>      <td>84</td>      <td>84</td>      <td>84</td>      <td>84</td>      <td>84</td>      <td>84</td>    </tr>    <tr>      <th>WEATHER</th>      <td>79</td>      <td>79</td>      <td>79</td>      <td>79</td>      <td>79</td>      <td>79</td>    </tr>    <tr>      <th>HOUSE_AND_HOME</th>      <td>74</td>      <td>74</td>      <td>74</td>      <td>74</td>      <td>74</td>      <td>74</td>    </tr>    <tr>      <th>EVENTS</th>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>      <td>64</td>    </tr>    <tr>      <th>PARENTING</th>      <td>60</td>      <td>60</td>      <td>60</td>      <td>60</td>      <td>60</td>      <td>60</td>    </tr>    <tr>      <th>COMICS</th>      <td>56</td>      <td>56</td>      <td>56</td>      <td>56</td>      <td>56</td>      <td>56</td>    </tr>    <tr>      <th>BEAUTY</th>      <td>53</td>      <td>53</td>      <td>53</td>      <td>53</td>      <td>53</td>      <td>53</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分类的安装量排序:娱乐社交类最被用户所需要 </span></span><br><span class="line">df.groupby(<span class="string">'Category'</span>).mean().sort_values(<span class="string">'Installs'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Category</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>COMMUNICATION</th>      <td>4.134647</td>      <td>907337.676190</td>      <td>1.289365e+07</td>      <td>3.504215e+07</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>4.058137</td>      <td>414015.754601</td>      <td>1.631384e+07</td>      <td>2.409143e+07</td>    </tr>    <tr>      <th>SOCIAL</th>      <td>4.238926</td>      <td>953672.807531</td>      <td>1.643765e+07</td>      <td>2.296179e+07</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>4.135294</td>      <td>340810.294118</td>      <td>2.122137e+07</td>      <td>2.072216e+07</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>4.159614</td>      <td>374915.551601</td>      <td>1.618811e+07</td>      <td>1.654501e+07</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>4.185022</td>      <td>148638.098930</td>      <td>1.363180e+07</td>      <td>1.548955e+07</td>    </tr>    <tr>      <th>GAME</th>      <td>4.244643</td>      <td>648903.763295</td>      <td>3.973997e+07</td>      <td>1.447229e+07</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>4.087380</td>      <td>122464.570776</td>      <td>2.293315e+07</td>      <td>1.321866e+07</td>    </tr>    <tr>      <th>TOOLS</th>      <td>4.059615</td>      <td>277335.644498</td>      <td>9.870441e+06</td>      <td>9.675661e+06</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>4.135385</td>      <td>91063.889764</td>      <td>1.365578e+07</td>      <td>9.327629e+06</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>4.308393</td>      <td>75321.234234</td>      <td>1.376752e+07</td>      <td>7.504367e+06</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>4.225835</td>      <td>220553.118812</td>      <td>1.593927e+07</td>      <td>6.932420e+06</td>    </tr>    <tr>      <th>WEATHER</th>      <td>4.238510</td>      <td>155634.987342</td>      <td>1.427317e+07</td>      <td>4.570893e+06</td>    </tr>    <tr>      <th>PERSONALIZATION</th>      <td>4.303077</td>      <td>142401.808511</td>      <td>1.168523e+07</td>      <td>4.075784e+06</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>4.235199</td>      <td>74171.371528</td>      <td>2.018017e+07</td>      <td>3.972300e+06</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>4.051854</td>      <td>135337.007634</td>      <td>1.669496e+07</td>      <td>3.841846e+06</td>    </tr>    <tr>      <th>SPORTS</th>      <td>4.211275</td>      <td>108765.578462</td>      <td>2.333144e+07</td>      <td>3.373768e+06</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>4.362956</td>      <td>112303.764706</td>      <td>1.882895e+07</td>      <td>2.965983e+06</td>    </tr>    <tr>      <th>FAMILY</th>      <td>4.181137</td>      <td>78550.239214</td>      <td>2.666982e+07</td>      <td>2.418319e+06</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>4.175461</td>      <td>56473.464286</td>      <td>1.999241e+07</td>      <td>1.891060e+06</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>4.349614</td>      <td>22175.046875</td>      <td>1.255163e+07</td>      <td>1.786533e+06</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>4.133347</td>      <td>23548.202381</td>      <td>1.431609e+07</td>      <td>1.659916e+06</td>    </tr>    <tr>      <th>LIFESTYLE</th>      <td>4.111489</td>      <td>32066.859079</td>      <td>1.515860e+07</td>      <td>1.365375e+06</td>    </tr>    <tr>      <th>FINANCE</th>      <td>4.125060</td>      <td>36701.756522</td>      <td>1.747266e+07</td>      <td>1.319851e+06</td>    </tr>    <tr>      <th>HOUSE_AND_HOME</th>      <td>4.156771</td>      <td>26079.013514</td>      <td>1.632407e+07</td>      <td>1.313682e+06</td>    </tr>    <tr>      <th>DATING</th>      <td>4.018100</td>      <td>21190.315789</td>      <td>1.583592e+07</td>      <td>8.241293e+05</td>    </tr>    <tr>      <th>COMICS</th>      <td>4.181848</td>      <td>41822.696429</td>      <td>1.433960e+07</td>      <td>8.032348e+05</td>    </tr>    <tr>      <th>LIBRARIES_AND_DEMO</th>      <td>4.181371</td>      <td>10795.607143</td>      <td>1.087250e+07</td>      <td>6.309037e+05</td>    </tr>    <tr>      <th>AUTO_AND_VEHICLES</th>      <td>4.190601</td>      <td>13690.188235</td>      <td>1.981538e+07</td>      <td>6.250613e+05</td>    </tr>    <tr>      <th>PARENTING</th>      <td>4.281960</td>      <td>15972.183333</td>      <td>2.207688e+07</td>      <td>5.253518e+05</td>    </tr>    <tr>      <th>BEAUTY</th>      <td>4.260553</td>      <td>7476.226415</td>      <td>1.428892e+07</td>      <td>5.131519e+05</td>    </tr>    <tr>      <th>EVENTS</th>      <td>4.363178</td>      <td>2515.906250</td>      <td>1.442185e+07</td>      <td>2.495806e+05</td>    </tr>    <tr>      <th>MEDICAL</th>      <td>4.173252</td>      <td>2994.863291</td>      <td>1.911849e+07</td>      <td>9.669159e+04</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分类的评论数据:社交游戏视频评论多 </span></span><br><span class="line">df.groupby(<span class="string">'Category'</span>).mean().sort_values(<span class="string">'Reviews'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Category</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>SOCIAL</th>      <td>4.238926</td>      <td>953672.807531</td>      <td>1.643765e+07</td>      <td>2.296179e+07</td>    </tr>    <tr>      <th>COMMUNICATION</th>      <td>4.134647</td>      <td>907337.676190</td>      <td>1.289365e+07</td>      <td>3.504215e+07</td>    </tr>    <tr>      <th>GAME</th>      <td>4.244643</td>      <td>648903.763295</td>      <td>3.973997e+07</td>      <td>1.447229e+07</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>4.058137</td>      <td>414015.754601</td>      <td>1.631384e+07</td>      <td>2.409143e+07</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>4.159614</td>      <td>374915.551601</td>      <td>1.618811e+07</td>      <td>1.654501e+07</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>4.135294</td>      <td>340810.294118</td>      <td>2.122137e+07</td>      <td>2.072216e+07</td>    </tr>    <tr>      <th>TOOLS</th>      <td>4.059615</td>      <td>277335.644498</td>      <td>9.870441e+06</td>      <td>9.675661e+06</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>4.225835</td>      <td>220553.118812</td>      <td>1.593927e+07</td>      <td>6.932420e+06</td>    </tr>    <tr>      <th>WEATHER</th>      <td>4.238510</td>      <td>155634.987342</td>      <td>1.427317e+07</td>      <td>4.570893e+06</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>4.185022</td>      <td>148638.098930</td>      <td>1.363180e+07</td>      <td>1.548955e+07</td>    </tr>    <tr>      <th>PERSONALIZATION</th>      <td>4.303077</td>      <td>142401.808511</td>      <td>1.168523e+07</td>      <td>4.075784e+06</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>4.051854</td>      <td>135337.007634</td>      <td>1.669496e+07</td>      <td>3.841846e+06</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>4.087380</td>      <td>122464.570776</td>      <td>2.293315e+07</td>      <td>1.321866e+07</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>4.362956</td>      <td>112303.764706</td>      <td>1.882895e+07</td>      <td>2.965983e+06</td>    </tr>    <tr>      <th>SPORTS</th>      <td>4.211275</td>      <td>108765.578462</td>      <td>2.333144e+07</td>      <td>3.373768e+06</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>4.135385</td>      <td>91063.889764</td>      <td>1.365578e+07</td>      <td>9.327629e+06</td>    </tr>    <tr>      <th>FAMILY</th>      <td>4.181137</td>      <td>78550.239214</td>      <td>2.666982e+07</td>      <td>2.418319e+06</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>4.308393</td>      <td>75321.234234</td>      <td>1.376752e+07</td>      <td>7.504367e+06</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>4.235199</td>      <td>74171.371528</td>      <td>2.018017e+07</td>      <td>3.972300e+06</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>4.175461</td>      <td>56473.464286</td>      <td>1.999241e+07</td>      <td>1.891060e+06</td>    </tr>    <tr>      <th>COMICS</th>      <td>4.181848</td>      <td>41822.696429</td>      <td>1.433960e+07</td>      <td>8.032348e+05</td>    </tr>    <tr>      <th>FINANCE</th>      <td>4.125060</td>      <td>36701.756522</td>      <td>1.747266e+07</td>      <td>1.319851e+06</td>    </tr>    <tr>      <th>LIFESTYLE</th>      <td>4.111489</td>      <td>32066.859079</td>      <td>1.515860e+07</td>      <td>1.365375e+06</td>    </tr>    <tr>      <th>HOUSE_AND_HOME</th>      <td>4.156771</td>      <td>26079.013514</td>      <td>1.632407e+07</td>      <td>1.313682e+06</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>4.133347</td>      <td>23548.202381</td>      <td>1.431609e+07</td>      <td>1.659916e+06</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>4.349614</td>      <td>22175.046875</td>      <td>1.255163e+07</td>      <td>1.786533e+06</td>    </tr>    <tr>      <th>DATING</th>      <td>4.018100</td>      <td>21190.315789</td>      <td>1.583592e+07</td>      <td>8.241293e+05</td>    </tr>    <tr>      <th>PARENTING</th>      <td>4.281960</td>      <td>15972.183333</td>      <td>2.207688e+07</td>      <td>5.253518e+05</td>    </tr>    <tr>      <th>AUTO_AND_VEHICLES</th>      <td>4.190601</td>      <td>13690.188235</td>      <td>1.981538e+07</td>      <td>6.250613e+05</td>    </tr>    <tr>      <th>LIBRARIES_AND_DEMO</th>      <td>4.181371</td>      <td>10795.607143</td>      <td>1.087250e+07</td>      <td>6.309037e+05</td>    </tr>    <tr>      <th>BEAUTY</th>      <td>4.260553</td>      <td>7476.226415</td>      <td>1.428892e+07</td>      <td>5.131519e+05</td>    </tr>    <tr>      <th>MEDICAL</th>      <td>4.173252</td>      <td>2994.863291</td>      <td>1.911849e+07</td>      <td>9.669159e+04</td>    </tr>    <tr>      <th>EVENTS</th>      <td>4.363178</td>      <td>2515.906250</td>      <td>1.442185e+07</td>      <td>2.495806e+05</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分类的打分数据，和其他数据不太一致，需要进一步分析 </span></span><br><span class="line">df.groupby(<span class="string">'Category'</span>).mean().sort_values(<span class="string">'Rating'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Category</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>EVENTS</th>      <td>4.363178</td>      <td>2515.906250</td>      <td>1.442185e+07</td>      <td>2.495806e+05</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>4.362956</td>      <td>112303.764706</td>      <td>1.882895e+07</td>      <td>2.965983e+06</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>4.349614</td>      <td>22175.046875</td>      <td>1.255163e+07</td>      <td>1.786533e+06</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>4.308393</td>      <td>75321.234234</td>      <td>1.376752e+07</td>      <td>7.504367e+06</td>    </tr>    <tr>      <th>PERSONALIZATION</th>      <td>4.303077</td>      <td>142401.808511</td>      <td>1.168523e+07</td>      <td>4.075784e+06</td>    </tr>    <tr>      <th>PARENTING</th>      <td>4.281960</td>      <td>15972.183333</td>      <td>2.207688e+07</td>      <td>5.253518e+05</td>    </tr>    <tr>      <th>BEAUTY</th>      <td>4.260553</td>      <td>7476.226415</td>      <td>1.428892e+07</td>      <td>5.131519e+05</td>    </tr>    <tr>      <th>GAME</th>      <td>4.244643</td>      <td>648903.763295</td>      <td>3.973997e+07</td>      <td>1.447229e+07</td>    </tr>    <tr>      <th>SOCIAL</th>      <td>4.238926</td>      <td>953672.807531</td>      <td>1.643765e+07</td>      <td>2.296179e+07</td>    </tr>    <tr>      <th>WEATHER</th>      <td>4.238510</td>      <td>155634.987342</td>      <td>1.427317e+07</td>      <td>4.570893e+06</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>4.235199</td>      <td>74171.371528</td>      <td>2.018017e+07</td>      <td>3.972300e+06</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>4.225835</td>      <td>220553.118812</td>      <td>1.593927e+07</td>      <td>6.932420e+06</td>    </tr>    <tr>      <th>SPORTS</th>      <td>4.211275</td>      <td>108765.578462</td>      <td>2.333144e+07</td>      <td>3.373768e+06</td>    </tr>    <tr>      <th>AUTO_AND_VEHICLES</th>      <td>4.190601</td>      <td>13690.188235</td>      <td>1.981538e+07</td>      <td>6.250613e+05</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>4.185022</td>      <td>148638.098930</td>      <td>1.363180e+07</td>      <td>1.548955e+07</td>    </tr>    <tr>      <th>COMICS</th>      <td>4.181848</td>      <td>41822.696429</td>      <td>1.433960e+07</td>      <td>8.032348e+05</td>    </tr>    <tr>      <th>LIBRARIES_AND_DEMO</th>      <td>4.181371</td>      <td>10795.607143</td>      <td>1.087250e+07</td>      <td>6.309037e+05</td>    </tr>    <tr>      <th>FAMILY</th>      <td>4.181137</td>      <td>78550.239214</td>      <td>2.666982e+07</td>      <td>2.418319e+06</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>4.175461</td>      <td>56473.464286</td>      <td>1.999241e+07</td>      <td>1.891060e+06</td>    </tr>    <tr>      <th>MEDICAL</th>      <td>4.173252</td>      <td>2994.863291</td>      <td>1.911849e+07</td>      <td>9.669159e+04</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>4.159614</td>      <td>374915.551601</td>      <td>1.618811e+07</td>      <td>1.654501e+07</td>    </tr>    <tr>      <th>HOUSE_AND_HOME</th>      <td>4.156771</td>      <td>26079.013514</td>      <td>1.632407e+07</td>      <td>1.313682e+06</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>4.135385</td>      <td>91063.889764</td>      <td>1.365578e+07</td>      <td>9.327629e+06</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>4.135294</td>      <td>340810.294118</td>      <td>2.122137e+07</td>      <td>2.072216e+07</td>    </tr>    <tr>      <th>COMMUNICATION</th>      <td>4.134647</td>      <td>907337.676190</td>      <td>1.289365e+07</td>      <td>3.504215e+07</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>4.133347</td>      <td>23548.202381</td>      <td>1.431609e+07</td>      <td>1.659916e+06</td>    </tr>    <tr>      <th>FINANCE</th>      <td>4.125060</td>      <td>36701.756522</td>      <td>1.747266e+07</td>      <td>1.319851e+06</td>    </tr>    <tr>      <th>LIFESTYLE</th>      <td>4.111489</td>      <td>32066.859079</td>      <td>1.515860e+07</td>      <td>1.365375e+06</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>4.087380</td>      <td>122464.570776</td>      <td>2.293315e+07</td>      <td>1.321866e+07</td>    </tr>    <tr>      <th>TOOLS</th>      <td>4.059615</td>      <td>277335.644498</td>      <td>9.870441e+06</td>      <td>9.675661e+06</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>4.058137</td>      <td>414015.754601</td>      <td>1.631384e+07</td>      <td>2.409143e+07</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>4.051854</td>      <td>135337.007634</td>      <td>1.669496e+07</td>      <td>3.841846e+06</td>    </tr>    <tr>      <th>DATING</th>      <td>4.018100</td>      <td>21190.315789</td>      <td>1.583592e+07</td>      <td>8.241293e+05</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以Type （免费还是收费）来分析</span></span><br><span class="line">df.groupby(<span class="string">'Type'</span>).count()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>App</th>      <th>Category</th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Type</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Free</th>      <td>8902</td>      <td>8902</td>      <td>8902</td>      <td>8902</td>      <td>8902</td>      <td>8902</td>    </tr>    <tr>      <th>Paid</th>      <td>756</td>      <td>756</td>      <td>756</td>      <td>756</td>      <td>756</td>      <td>756</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只有两个类型，且数据量差别很大，没必要继续对比了</span></span><br><span class="line">df.groupby(<span class="string">'Type'</span>).sum().sort_values(<span class="string">'Installs'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th {    vertical-align: top;}.dataframe thead th {    text-align: right;}</code></pre><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Type</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>Free</th>      <td>37122.302221</td>      <td>2085471559</td>      <td>179915143450</td>      <td>75065572646</td>    </tr>    <tr>      <th>Paid</th>      <td>3209.947128</td>      <td>6596015</td>      <td>14312398390</td>      <td>57364881</td>    </tr>  </tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Category和Type一起分析</span></span><br><span class="line">df.groupby([<span class="string">'Type'</span>, <span class="string">'Category'</span>]).mean().sort_values(<span class="string">'Reviews'</span>, ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>    <tr>      <th>Type</th>      <th>Category</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="27" valign="top">Free</th>      <th>COMMUNICATION</th>      <td>4.139080</td>      <td>992108.173611</td>      <td>1.350167e+07</td>      <td>3.832263e+07</td>    </tr>    <tr>      <th>SOCIAL</th>      <td>4.243693</td>      <td>965794.741525</td>      <td>1.656355e+07</td>      <td>2.325365e+07</td>    </tr>    <tr>      <th>GAME</th>      <td>4.233936</td>      <td>707783.190422</td>      <td>4.036479e+07</td>      <td>1.580151e+07</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>4.057084</td>      <td>424347.176101</td>      <td>1.636918e+07</td>      <td>2.469705e+07</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>4.167498</td>      <td>401664.270992</td>      <td>1.667036e+07</td>      <td>1.773767e+07</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>4.126000</td>      <td>347526.410000</td>      <td>2.093427e+07</td>      <td>2.113460e+07</td>    </tr>    <tr>      <th>TOOLS</th>      <td>4.047697</td>      <td>305987.504673</td>      <td>1.033869e+07</td>      <td>1.068097e+07</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>4.223093</td>      <td>222756.230000</td>      <td>1.606466e+07</td>      <td>7.001693e+06</td>    </tr>    <tr>      <th>PERSONALIZATION</th>      <td>4.277251</td>      <td>180508.227119</td>      <td>1.024622e+07</td>      <td>5.183851e+06</td>    </tr>    <tr>      <th>WEATHER</th>      <td>4.226064</td>      <td>171249.619718</td>      <td>1.429121e+07</td>      <td>5.074486e+06</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>4.183759</td>      <td>160170.312139</td>      <td>1.411873e+07</td>      <td>1.673896e+07</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>4.059467</td>      <td>140650.476190</td>      <td>1.652609e+07</td>      <td>3.993340e+06</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>4.084875</td>      <td>129476.657005</td>      <td>2.206258e+07</td>      <td>1.398408e+07</td>    </tr>    <tr>      <th>SPORTS</th>      <td>4.208242</td>      <td>116937.468439</td>      <td>2.361516e+07</td>      <td>3.638640e+06</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>4.349494</td>      <td>115908.721739</td>      <td>1.813604e+07</td>      <td>3.063913e+06</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>4.130111</td>      <td>91785.821429</td>      <td>1.364591e+07</td>      <td>9.401636e+06</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>4.321794</td>      <td>86183.082474</td>      <td>1.393813e+07</td>      <td>8.587352e+06</td>    </tr>    <tr>      <th>FAMILY</th>      <td>4.171360</td>      <td>85068.516990</td>      <td>2.667952e+07</td>      <td>2.674327e+06</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>4.229562</td>      <td>78078.981685</td>      <td>2.011587e+07</td>      <td>4.188822e+06</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>4.172288</td>      <td>57469.372727</td>      <td>2.016998e+07</td>      <td>1.924898e+06</td>    </tr>    <tr>      <th>COMICS</th>      <td>4.181848</td>      <td>41822.696429</td>      <td>1.433960e+07</td>      <td>8.032348e+05</td>    </tr>    <tr>      <th>FINANCE</th>      <td>4.135910</td>      <td>38533.256098</td>      <td>1.791964e+07</td>      <td>1.387692e+06</td>    </tr>    <tr>      <th>LIFESTYLE</th>      <td>4.104136</td>      <td>33672.140000</td>      <td>1.521014e+07</td>      <td>1.436127e+06</td>    </tr>    <tr>      <th>HOUSE_AND_HOME</th>      <td>4.156771</td>      <td>26079.013514</td>      <td>1.632407e+07</td>      <td>1.313682e+06</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>4.134144</td>      <td>24179.198529</td>      <td>1.438947e+07</td>      <td>1.708216e+06</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>4.330742</td>      <td>23230.114754</td>      <td>1.291318e+07</td>      <td>1.874133e+06</td>    </tr>    <tr>      <th>DATING</th>      <td>4.025574</td>      <td>21951.127273</td>      <td>1.603256e+07</td>      <td>8.540288e+05</td>    </tr>    <tr>      <th rowspan="5" valign="top">Paid</th>      <th>FAMILY</th>      <td>4.269186</td>      <td>19850.120219</td>      <td>2.658246e+07</td>      <td>1.128405e+05</td>    </tr>    <tr>      <th>GAME</th>      <td>4.359153</td>      <td>19181.109756</td>      <td>3.305742e+07</td>      <td>2.560971e+05</td>    </tr>    <tr>      <th>WEATHER</th>      <td>4.348970</td>      <td>17055.125000</td>      <td>1.411302e+07</td>      <td>1.015000e+05</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>EDUCATION</th>      <td>4.750000</td>      <td>8661.250000</td>      <td>3.875000e+07</td>      <td>1.505000e+05</td>    </tr>    <tr>      <th>Free</th>      <th>BEAUTY</th>      <td>4.260553</td>      <td>7476.226415</td>      <td>1.428892e+07</td>      <td>5.131519e+05</td>    </tr>    <tr>      <th rowspan="5" valign="top">Paid</th>      <th>SPORTS</th>      <td>4.249313</td>      <td>6276.458333</td>      <td>1.977301e+07</td>      <td>5.182562e+04</td>    </tr>    <tr>      <th>PRODUCTIVITY</th>      <td>4.200628</td>      <td>6132.892857</td>      <td>7.614763e+06</td>      <td>5.043054e+04</td>    </tr>    <tr>      <th>PHOTOGRAPHY</th>      <td>4.050896</td>      <td>6064.789474</td>      <td>9.538167e+06</td>      <td>9.888105e+04</td>    </tr>    <tr>      <th>ENTERTAINMENT</th>      <td>4.600000</td>      <td>5004.500000</td>      <td>3.557604e+07</td>      <td>1.000000e+05</td>    </tr>    <tr>      <th>PARENTING</th>      <td>3.350000</td>      <td>4183.000000</td>      <td>1.322604e+07</td>      <td>2.505000e+04</td>    </tr>    <tr>      <th>Free</th>      <th>MEDICAL</th>      <td>4.159613</td>      <td>3727.451923</td>      <td>1.949135e+07</td>      <td>1.206165e+05</td>    </tr>    <tr>      <th rowspan="4" valign="top">Paid</th>      <th>PERSONALIZATION</th>      <td>4.397137</td>      <td>3619.172840</td>      <td>1.692605e+07</td>      <td>4.023202e+04</td>    </tr>    <tr>      <th>VIDEO_PLAYERS</th>      <td>4.100000</td>      <td>3341.750000</td>      <td>1.411407e+07</td>      <td>1.775000e+04</td>    </tr>    <tr>      <th>COMMUNICATION</th>      <td>4.087362</td>      <td>3119.037037</td>      <td>6.408087e+06</td>      <td>5.037222e+04</td>    </tr>    <tr>      <th>HEALTH_AND_FITNESS</th>      <td>4.337802</td>      <td>3052.866667</td>      <td>2.135042e+07</td>      <td>3.160733e+04</td>    </tr>    <tr>      <th>Free</th>      <th>EVENTS</th>      <td>4.365899</td>      <td>2555.841270</td>      <td>1.454442e+07</td>      <td>2.535422e+05</td>    </tr>    <tr>      <th rowspan="17" valign="top">Paid</th>      <th>LIFESTYLE</th>      <td>4.246935</td>      <td>2495.894737</td>      <td>1.420927e+07</td>      <td>6.205842e+04</td>    </tr>    <tr>      <th>TOOLS</th>      <td>4.174056</td>      <td>2204.320513</td>      <td>5.374062e+06</td>      <td>2.214668e+04</td>    </tr>    <tr>      <th>BUSINESS</th>      <td>4.106273</td>      <td>2094.333333</td>      <td>1.182101e+07</td>      <td>1.773125e+04</td>    </tr>    <tr>      <th>FOOD_AND_DRINK</th>      <td>4.350000</td>      <td>1698.500000</td>      <td>1.022604e+07</td>      <td>3.000000e+04</td>    </tr>    <tr>      <th>TRAVEL_AND_LOCAL</th>      <td>4.130586</td>      <td>1506.083333</td>      <td>3.795035e+07</td>      <td>1.525500e+04</td>    </tr>    <tr>      <th>MAPS_AND_NAVIGATION</th>      <td>3.860000</td>      <td>1437.600000</td>      <td>2.095042e+07</td>      <td>2.422000e+04</td>    </tr>    <tr>      <th>AUTO_AND_VEHICLES</th>      <td>4.327838</td>      <td>1387.666667</td>      <td>1.705070e+07</td>      <td>1.671667e+04</td>    </tr>    <tr>      <th>FINANCE</th>      <td>3.915708</td>      <td>1364.588235</td>      <td>8.848529e+06</td>      <td>1.091776e+04</td>    </tr>    <tr>      <th>ART_AND_DESIGN</th>      <td>4.733333</td>      <td>722.000000</td>      <td>5.200000e+06</td>      <td>5.333333e+03</td>    </tr>    <tr>      <th>DATING</th>      <td>3.812545</td>      <td>268.000000</td>      <td>1.042835e+07</td>      <td>1.891667e+03</td>    </tr>    <tr>      <th>SHOPPING</th>      <td>4.500000</td>      <td>242.000000</td>      <td>3.400000e+06</td>      <td>5.050000e+03</td>    </tr>    <tr>      <th>MEDICAL</th>      <td>4.224520</td>      <td>241.036145</td>      <td>1.771691e+07</td>      <td>6.757024e+03</td>    </tr>    <tr>      <th>NEWS_AND_MAGAZINES</th>      <td>4.800000</td>      <td>100.500000</td>      <td>1.490000e+07</td>      <td>2.750000e+03</td>    </tr>    <tr>      <th>SOCIAL</th>      <td>3.863919</td>      <td>80.666667</td>      <td>6.533333e+06</td>      <td>2.000000e+03</td>    </tr>    <tr>      <th>BOOKS_AND_REFERENCE</th>      <td>4.215541</td>      <td>64.142857</td>      <td>1.258550e+07</td>      <td>8.327143e+02</td>    </tr>    <tr>      <th>LIBRARIES_AND_DEMO</th>      <td>4.191757</td>      <td>4.000000</td>      <td>4.700000e+06</td>      <td>1.000000e+02</td>    </tr>    <tr>      <th>EVENTS</th>      <td>4.191757</td>      <td>0.000000</td>      <td>6.700000e+06</td>      <td>1.000000e+00</td>    </tr>  </tbody></table><p>63 rows × 4 columns</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 评论安装比</span></span><br><span class="line"><span class="comment"># 收费的app评论比率更高</span></span><br><span class="line">g = df.groupby([<span class="string">'Type'</span>, <span class="string">'Category'</span>]).mean()</span><br><span class="line">(g[<span class="string">'Reviews'</span>] / g[<span class="string">'Installs'</span>]).sort_values(ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><pre><code>Type  Category           Paid  VIDEO_PLAYERS          0.188268      FAMILY                 0.175913      WEATHER                0.168031      PARENTING              0.166986      DATING                 0.141674      ART_AND_DESIGN         0.135375      FINANCE                0.124988      PRODUCTIVITY           0.121611      SPORTS                 0.121107      BUSINESS               0.118115      TOOLS                  0.099533      TRAVEL_AND_LOCAL       0.098727      HEALTH_AND_FITNESS     0.096587      PERSONALIZATION        0.089958      AUTO_AND_VEHICLES      0.083011      BOOKS_AND_REFERENCE    0.077029      GAME                   0.074898      COMMUNICATION          0.061920      PHOTOGRAPHY            0.061334      MAPS_AND_NAVIGATION    0.059356      EDUCATION              0.057550      FOOD_AND_DRINK         0.056617Free  COMICS                 0.052068Paid  ENTERTAINMENT          0.050045      SHOPPING               0.047921Free  GAME                   0.044792      SOCIAL                 0.041533Paid  SOCIAL                 0.040333      LIFESTYLE              0.040218      LIBRARIES_AND_DEMO     0.040000                               ...   Free  MAPS_AND_NAVIGATION    0.035221      PERSONALIZATION        0.034821      WEATHER                0.033747      SPORTS                 0.032138      SHOPPING               0.031815      FAMILY                 0.031809      MEDICAL                0.030903      PARENTING              0.030185      FOOD_AND_DRINK         0.029856      TOOLS                  0.028648      FINANCE                0.027768      COMMUNICATION          0.025888      DATING                 0.025703      LIFESTYLE              0.023446      PHOTOGRAPHY            0.022645      AUTO_AND_VEHICLES      0.021844      HOUSE_AND_HOME         0.019852      HEALTH_AND_FITNESS     0.018640      VIDEO_PLAYERS          0.017182      LIBRARIES_AND_DEMO     0.017111      ENTERTAINMENT          0.016443      BEAUTY                 0.014569      BUSINESS               0.014155      ART_AND_DESIGN         0.012395      EVENTS                 0.010081      BOOKS_AND_REFERENCE    0.010036      NEWS_AND_MAGAZINES     0.009763      PRODUCTIVITY           0.009569      TRAVEL_AND_LOCAL       0.009259Paid  EVENTS                 0.000000Length: 63, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 相关性:</span></span><br><span class="line"><span class="comment">#评论数和安装数强相关，其他的连0.1都不到，可以认为是不相关的(0.5以上可以认为是相关的，0.3以上可以认为是弱相关)</span></span><br><span class="line">df.corr()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }</style><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Rating</th>      <th>Reviews</th>      <th>Size</th>      <th>Installs</th>    </tr>  </thead>  <tbody>    <tr>      <th>Rating</th>      <td>1.000000</td>      <td>0.054337</td>      <td>0.052751</td>      <td>0.039245</td>    </tr>    <tr>      <th>Reviews</th>      <td>0.054337</td>      <td>1.000000</td>      <td>0.080578</td>      <td>0.625164</td>    </tr>    <tr>      <th>Size</th>      <td>0.052751</td>      <td>0.080578</td>      <td>1.000000</td>      <td>0.050675</td>    </tr>    <tr>      <th>Installs</th>      <td>0.039245</td>      <td>0.625164</td>      <td>0.050675</td>      <td>1.000000</td>    </tr>  </tbody></table></div>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql进阶</title>
      <link href="/2020/07/07/Mysql%E8%BF%9B%E9%98%B6/"/>
      <url>/2020/07/07/Mysql%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql进阶"><a href="#Mysql进阶" class="headerlink" title="Mysql进阶"></a>Mysql进阶</h1><h2 id="不同岗位对MySQL的技术要求"><a href="#不同岗位对MySQL的技术要求" class="headerlink" title="不同岗位对MySQL的技术要求"></a>不同岗位对MySQL的技术要求</h2><p>对于不用的岗位，我们对MySql的技术要求不同。</p><p>数据分析岗位，侧重查询和多表关联的复杂查询。对于数据分析来说，主要掌握查询，取数据，不关心性能。</p><p>数据库开发，程序员岗，注重设计系统，包括表的设计，增删改查，懂得数据库进行查询的原理，依据统计信息对查询进行性能优化，处理非常大的数据量的的查询，SQL的语言的复杂性较数据分析师的高。</p><p>DBA-数据库管理员，连接、配置服务器，保证SQL的服务性能、稳定性，修改慢查询，此外，数据库的集群管理，机房服务器连接的一致性管理也是重点。</p><h2 id="Python操作MySQL"><a href="#Python操作MySQL" class="headerlink" title="Python操作MySQL"></a>Python操作MySQL</h2><p>主要使用库： Python DB-API</p><h3 id="常用模块："><a href="#常用模块：" class="headerlink" title="常用模块："></a>常用模块：</h3><ul><li>MySQLdb ： MySQL-Python，底层C语言实现，在Python2版本中使用多</li><li>mysql-connector : MySqL官方提供，使用不是很友好</li><li>pymysql：使用Python实现，Python三版本以上使用，<strong>主要使用pymysql</strong></li></ul><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>连接数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pymysql</span><br><span class="line">db &#x3D; pymysql.connect(host&#x3D;&#39;&#39;,port&#x3D;3306)</span><br></pre></td></tr></table></figure><p>获取游标</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cs &#x3D; db.cursor()</span><br></pre></td></tr></table></figure><p> Cursor是游标,指针的意思，通过cursor读取mysql中的数据，存放在计算机内存中。然后再用python读取    curosr，Cursor可以看做一个中间载体，摆渡船的作用。</p><p> 选择数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.select_db(&#39;db_name&#39;)</span><br></pre></td></tr></table></figure><p> 执行SQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sql &#x3D; &#39;show databases&#39;</span><br><span class="line">result &#x3D; cs.execute(sql)</span><br><span class="line">dbs &#x3D; cs.fetchall()</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>在上一期的课程中，我们讲过索引，这里再复习一下，如果进行工作面试，对MySql的索引考察会是一块重点。</p><p>索引有一下几大特点：</p><ul><li>对表中一列或多列的值进行排序</li><li>定义一种存储在磁盘上的结构，通过索引的结构可以将数据快速从磁盘中读取到内存中</li><li>通过索引可以快速检索到数据</li><li>数据库内置的存储引擎来实现检索</li></ul><p>索引类型，上周的课程提到过，可以翻回去复习。</p><p>对于索引的存储结构，这里有两个重要的概念</p><ul><li>非聚簇索引 (Non-clustered Index)：索引树的叶子节点不存放数据，但存有储数据的位置信息，数据和索引分离</li><li>聚簇索引（Clustered Index）：数据存储在索引树的叶子节点上</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>执行查询时，MySQL只能使用一个索引</li><li>创建索引，可以提高查询速度，但有数据被添加和删除时，需要更新索引，降低了插入和修改数据的速度。</li><li>索引列的数据类型存储大小越小越好，如int类型的索引列查询时优于char字符串类型</li><li>尽量避免NULL，可以在创建列的时候限制，避免NULL</li></ul><h3 id="InnoDB、MyISAM索引引擎"><a href="#InnoDB、MyISAM索引引擎" class="headerlink" title="InnoDB、MyISAM索引引擎"></a>InnoDB、MyISAM索引引擎</h3><ul><li><p>MyISAM引擎：使用B+tree的索引结构，叶子节点存放是一个指针，记录地址，指向数据文件中这一索引所在的行的数据的位置。查询的步骤，根据查询语句的条件，在索引树中检索到叶子节点，根据叶子节点中的地址信息，找到数据文件中索引行的其他列的数据。-类似打开字典，在字典拼音目录中找到这一发音-索引，根据发音所指的页码-地址再去数据库文件-字典正文中提取信息，<strong>索引结构与数据存储分离</strong>。</p></li><li><p>InnoDB引擎：与MyISAM索引和数据分开存放的不同是，InnoDB引擎数据文件本身就是一个索引，按照B+Tree的结构组织存放，叶子节点包含全部数据的信息，即数据存储在索引上。优势是对于按照主键索引有序排列的行，数据存储在索引上，相较于索引和数据存储分离的结构，可以更快速的读取索引所在行的全部数据，不用根据地址再去数据文件中寻找数据，提高查询的速度，但不总是速度会提高，查询速度还与查询语句的内容，数据库的数据量，索引的类型和主键的设置有关。实际中，大部分使用的是InnoDB引擎。此外，InnoDB使用行级锁，支持事务，和外键查询。</p></li></ul><h3 id="图形示意："><a href="#图形示意：" class="headerlink" title="图形示意："></a>图形示意：</h3><p>MyISAM引擎</p><p><img src="/" alt="image-20200627093047677" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200627093047677.png"></p><p>主键上带有索引，存放在B+Tree结构中，第三行是叶子节点，存放的是地址信息，根据地址信息指向磁盘中数据库文件中这一索引所在的行，找到行后再返回数据，磁盘进行了多次的I/O,速度较慢， 是非聚簇索引的结构。</p><p>InnoDB引擎</p><p><img src="/" alt="image-20200627093528203" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200627093528203.png"></p><p>对比MyISAM，InnoDB 采用的是聚簇索引结构，在第三行的叶子节点上，数据就直接存放在叶子节点上，首先根据主键索引，找到索引后，可以直接读取索引行的数据，减少了磁盘的I/O，提高了查询速度。</p><h2 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h2><h3 id="优化的一般原则"><a href="#优化的一般原则" class="headerlink" title="优化的一般原则"></a>优化的一般原则</h3><p>一般来说查询性能低下的原因是访问了太多的数据：</p><ul><li>是否请求了不需要的数据</li><li>使用where子句进行过滤</li><li>使用临时表，将需要查询的数据汇总到临时表中</li><li>批量处理法，对于需要处理大量数据的语句，批量进行处理</li></ul><h3 id="索引的优化"><a href="#索引的优化" class="headerlink" title="索引的优化"></a>索引的优化</h3><ul><li>使用自增ID作为主键，业务主键用unique key</li><li>一般来说，性别，status，type，类别这类字段，值得分布很窄，不适合单独作为索引字段</li><li>索引并不是越多越好，无用的索引要删除</li><li>不要使用%xxx%，前后双通配符，这种模糊匹配，会导致全表扫描，降低查询速度</li></ul><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>对于刚起步学习数据分析的同学们，掌握好查询是最重要的，可以暂时不考虑性能，平时可以多在网上搜索资料，最好是带有答案讲解的题目，做题练习，这里推荐SQL面试50题，<a href="https://www.bilibili.com/video/BV1q4411G7Lw?from=search&amp;seid=818452521832640792。" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1q4411G7Lw?from=search&amp;seid=818452521832640792。</a></p><p>对于从事大数据，ETL工程师数据开发等岗位，需要了解数据库的内部原理，对慢查询进行优化，建表时为了提高查询的性能，索引的设置非常关键。对业务进行分析时，往往需要新建表，保留原有的数据，建表需要结合实际的业务需求，有兴趣的同学可以参考以下资料加深对数据库知识的学习。</p><ul><li>MySQL 官方手册：<a href="https://dev.mysql.com/doc/refman/8.0/en/" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/</a></li><li>《高性能MySQl》</li><li>《高可用MySQL》</li><li>《深入理解MySQL核心技术》</li><li>MySQL的源码</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DML练习题</title>
      <link href="/2020/06/25/DML%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
      <url>/2020/06/25/DML%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="构造模拟练习场景："><a href="#构造模拟练习场景：" class="headerlink" title="构造模拟练习场景："></a>构造模拟练习场景：</h2><p>构建学生、课程、教师、成绩表，基于这四张基本表结合DML进行MYSQL练习。</p><p><em>公众号后台回复“DML练习”，获取下述练习题所需数据。</em><br><img src="/" alt="image-20200624121006193" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200624121006193.png"></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><strong>Q1:</strong> 统计每门课程的学生人数</p><p><strong>Q2:</strong> 查询”01”课程比”02”课程成绩高的学生的信息及课程分数</p><p><strong>Q3:</strong> 查询平均成绩大于等于60分的学生的学生编号、学生姓名和平均成绩</p><p><strong>Q4:</strong> 查询学过编号为”01”但是没有学过编号为”02”的课程的同学的信息</p><p><strong>Q5:</strong> 查询每门课程成绩最好的前两名</p><p>记得留言分享你的作业哦。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> SQL百炼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作-DML</title>
      <link href="/2020/06/16/3%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DML/"/>
      <url>/2020/06/16/3%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DML/</url>
      
        <content type="html"><![CDATA[<h1 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h1><blockquote><p><strong>DML（Data Manipulation Language），是通过对表中数据的插入、删除和修改等操作，实现对数据库的基本操作。</strong></p><p>主要用途：对数据表进行数据插入、删除、修改、排序或检索操作。</p><p>操纵命令：INSERT、UPDATE、DELETE</p><p>INSERT：把数据插入到数据表中。</p><p>UPDATE：修改数据记录。</p><p>DELETE：删除数据库中不必再继续保留的记录。</p></blockquote><h1 id="1、插入数据"><a href="#1、插入数据" class="headerlink" title="1、插入数据"></a>1、插入数据</h1><h2 id="形式一"><a href="#形式一" class="headerlink" title="形式一"></a>形式一</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_NAME (字段名<span class="number">1</span>,字段名<span class="number">2</span>,.....) <span class="keyword">VALUES</span>(数值<span class="number">1</span>,数值<span class="number">2</span>,....);</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span>(user_id,user_name,age,remove,tel,sex)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">001</span>,<span class="string">"A2Data"</span>,<span class="number">22</span>,<span class="number">0</span>,<span class="number">18511990011</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="形式二"><a href="#形式二" class="headerlink" title="形式二"></a>形式二</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> TABLE_NAME <span class="keyword">SET</span> 字段名<span class="number">1</span> = 数值<span class="number">1</span>, 字段名<span class="number">2</span> = 数值<span class="number">2</span>,....;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> <span class="keyword">SET</span> user_id=<span class="number">001</span>,user_name=<span class="string">"A2Data"</span>,age=<span class="number">22</span>,remove=<span class="number">0</span>,tel=<span class="number">18511990011</span>,sex=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="2、修改数据"><a href="#2、修改数据" class="headerlink" title="2、修改数据"></a>2、修改数据</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> TABLE_NAME <span class="keyword">SET</span> 字段名<span class="number">1</span> = 新数值<span class="number">1</span>,字段名<span class="number">2</span> = 新数值<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">USER</span> <span class="keyword">SET</span> age = <span class="number">25</span> , sex = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="3、解决重复记录的更新"><a href="#3、解决重复记录的更新" class="headerlink" title="3、解决重复记录的更新"></a>3、解决重复记录的更新</h1><p>使用<strong>on duplicate key update</strong>可以解决插入或更改重复主键，即当insert内容和原表内容存在重复记录时，执行update操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name1 <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name2 <span class="keyword">ON</span> <span class="keyword">DUPLICATE</span> <span class="keyword">KEY</span> <span class="keyword">UPDATE</span> column_name = <span class="keyword">VALUES</span>(column_name);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>在使用on duplicate key update时，表中必须要存在至少一个unique key或者primary key。</p><p>案例：<br>现有表v1和v2如下：</p><p><img src="/" alt="image-20200615211933034" style="zoom: 50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615211933034.png"><img src="/" alt="image-20200615211959140" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615211959140.png"></p><p>v1表与v2表同时存在id为005的行，且name字段值不一致。</p><p>我们使用on duplicate key update对v1表插入v2内容：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> v1 <span class="keyword">select</span> <span class="keyword">name</span>,tel,remove <span class="keyword">from</span> v2 <span class="keyword">on</span> <span class="keyword">duplicate</span> <span class="keyword">key</span> <span class="keyword">update</span> <span class="keyword">name</span> = <span class="keyword">values</span>(<span class="keyword">name</span>);</span><br></pre></td></tr></table></figure><p>查看执行后的v1表内容，可以看到id为005的记录，其name字段值已修改为v2的相应记录：</p><img src="/" alt="image-20200615212924946" style="zoom:67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615212924946.png"><h1 id="4、删除数据"><a href="#4、删除数据" class="headerlink" title="4、删除数据"></a>4、删除数据</h1><h2 id="方法一：DELETE"><a href="#方法一：DELETE" class="headerlink" title="方法一：DELETE"></a>方法一：DELETE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> TABLE_NAME</span><br><span class="line">[<span class="keyword">WHERE</span> 子句]</span><br><span class="line">如不加<span class="keyword">WHERE</span>子句则表中数据全部删除</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h2 id="方法二：TRUNCATE"><a href="#方法二：TRUNCATE" class="headerlink" title="方法二：TRUNCATE"></a>方法二：TRUNCATE</h2><p>TRUNCATE优势：作为DDL语句，比DELETE运行速度更快，且使用资源更少</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> TABLE_NAME</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h1 id="5、数据库查询"><a href="#5、数据库查询" class="headerlink" title="5、数据库查询"></a>5、数据库查询</h1><h2 id="5-1、基本查询语句"><a href="#5-1、基本查询语句" class="headerlink" title="5.1、基本查询语句"></a>5.1、基本查询语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> 条件语句</span><br><span class="line">[<span class="keyword">LIMIT</span> 限制行数]</span><br></pre></td></tr></table></figure><p>WHERE限制条件一览表：</p><table><thead><tr><th align="left">限制条件类别</th><th align="center">对应标识</th><th>备注</th></tr></thead><tbody><tr><td align="left">比较</td><td align="center">&gt;、&lt;、=、&gt;=、&lt;=、&lt;&gt;</td><td></td></tr><tr><td align="left">集合</td><td align="center">in、not in</td><td>无法获取null值</td></tr><tr><td align="left">指定范围</td><td align="center">between and</td><td>使用时需注意其结果包含边界值</td></tr><tr><td align="left">空值判断</td><td align="center">is null、is not null</td><td></td></tr><tr><td align="left">且</td><td align="center">and</td><td></td></tr><tr><td align="left">或</td><td align="center">or</td><td></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> user_id,user_name <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> age &gt; <span class="number">20</span> <span class="keyword">and</span> tel <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200612100312585" style="zoom: 50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612100312585.png"><p>别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">column_name AS 别名</span><br><span class="line"></span><br><span class="line">table_name AS 别名</span><br></pre></td></tr></table></figure><p><em>注:</em>WHERE子句中不可使用别名</p><p>GROUP BY：用于对查询结果进行数据分组</p><p>HAVING：用于对分组后的结果进行统计，其后可以跟聚合函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">user表记录了用户所在部门user_dept，筛选出部门平均年龄大于25的结果。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> user_dept,<span class="keyword">AVG</span>(age) <span class="keyword">as</span> <span class="string">'年龄'</span> <span class="keyword">FROM</span> <span class="string">`user`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_dept</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">AVG</span>(age)&gt;<span class="number">25</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200612100428397" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612100428397.png"></p><p>HAVING语句用于对分组后的结果进行统计</p><p>ORDER BY：对查询结果进行排序,默认为ASC升序，DESC为降序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> user_id,user_name <span class="keyword">FROM</span> <span class="string">`user`</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> user_name ;</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200612100524629" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612100524629.png"><p>DISTINCT：取消重复的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> user_dept <span class="keyword">FROM</span> <span class="string">`user`</span>;</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200612100558579" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612100558579.png"><h2 id="5-2、模糊查询"><a href="#5-2、模糊查询" class="headerlink" title="5.2、模糊查询"></a>5.2、模糊查询</h2><h3 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">LIKE</span> 模式字符串</span><br></pre></td></tr></table></figure><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>%</td><td>匹配任意长度（0或多个）字符串，不能匹配空值</td></tr><tr><td>_</td><td>匹配任意单个字符串，_表示1个长度</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">查询user表中所有姓名为A开头的人员信息。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span></span><br><span class="line"><span class="keyword">WHERE</span> user_name <span class="keyword">like</span> <span class="string">'A%'</span>;</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200612100631405" style="zoom: 67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612100631405.png"><h3 id="RLIKE、REGEXP"><a href="#RLIKE、REGEXP" class="headerlink" title="RLIKE、REGEXP"></a>RLIKE、REGEXP</h3><p>这两个主要用于在MYSQL中进行正则表达式的书写。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name REGEXP/<span class="keyword">RLIKE</span> 模式字符串;</span><br></pre></td></tr></table></figure><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>.</td><td>匹配任意单个字符</td></tr><tr><td>*</td><td>匹配0个或多个前一个得到的字符</td></tr><tr><td>^</td><td>匹配开头，如^s匹配以s或者S开头的字符串。</td></tr><tr><td>$</td><td>匹配结尾，如s$匹配以s结尾的字符串。</td></tr><tr><td>{n}</td><td>匹配前一个字符反复n次。</td></tr><tr><td>｜</td><td>多个条件间的“或”连接</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">查询user表中姓名存在字段bb的人员。</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_name regexp <span class="string">'b&#123;2&#125;'</span>;</span><br><span class="line"></span><br><span class="line">查询user表中姓名为n结尾的人员。</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_name <span class="keyword">rlike</span> <span class="string">'n$'</span>;</span><br><span class="line"></span><br><span class="line">查询user表中姓名存在an字段的人员。</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_name <span class="keyword">rlike</span> <span class="string">'an'</span>;</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200615223316834" style="zoom: 67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615223316834.png"><h2 id="5-3、存储过程"><a href="#5-3、存储过程" class="headerlink" title="5.3、存储过程"></a>5.3、存储过程</h2><h3 id="存储过程基本结构"><a href="#存储过程基本结构" class="headerlink" title="存储过程基本结构"></a>存储过程基本结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">构造存储过程：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储体名称(<span class="keyword">IN</span>/<span class="keyword">OUT</span> 参数名 参数类型)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">存储内容</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line">调用存储过程：</span><br><span class="line"><span class="keyword">CALL</span> 存储体名称(参数)</span><br></pre></td></tr></table></figure><h3 id="终端运行存储过程"><a href="#终端运行存储过程" class="headerlink" title="终端运行存储过程"></a>终端运行存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">构造存储体u1，筛选所有部门为R&amp;D的员工。</span><br><span class="line"></span><br><span class="line">首先将MYSQL默认结束符进行修改：</span><br><span class="line">DELIMITER //</span><br><span class="line"></span><br><span class="line">构造存储过程：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> U1()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> user_dept = <span class="string">'R&amp;D'</span>;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">调用存储体：</span><br><span class="line"><span class="keyword">CALL</span> u1()//</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200612095224202" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200612095224202.png"></p><h2 id="5-4、多表查询"><a href="#5-4、多表查询" class="headerlink" title="5.4、多表查询"></a>5.4、多表查询</h2><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TABLE_A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> TABLE_B </span><br><span class="line"><span class="keyword">ON</span> TABLE_A.COLUMN 比较运算符 TABLE_B.COLUMN;</span><br></pre></td></tr></table></figure><p>内连接用于比较并返回满足连接条件的数据行，结果取交集。</p><p>inner join示意图：</p><img src="/" alt="image-20200616222620841" style="zoom: 33%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616222620841.png"><p><strong>注意：</strong>如果两边的表行数不一致，可能会出现丢失数据。</p><h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> TABLE_A <span class="keyword">LEFT</span>|<span class="keyword">RIGHT</span>|<span class="keyword">FULL</span> <span class="keyword">JOIN</span> TABLE_B</span><br><span class="line"><span class="keyword">ON</span> TABLE_A.COLUMN 比较运算符 TABLE_B.COLUMN;</span><br></pre></td></tr></table></figure><p>外连接的两个表有主从之分，主表全部保存，从表适配保存。</p><p>full outer join示意图：</p><img src="/" alt="image-20200616223251275" style="zoom: 50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616223251275.png"><p>left/right outer join示意图：</p><img src="/" alt="image-20200616223435500" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616223435500.png"><h1 id="6、锁表"><a href="#6、锁表" class="headerlink" title="6、锁表"></a>6、锁表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">锁表；</span><br><span class="line"><span class="keyword">LOCK</span> <span class="keyword">TABLES</span> table_name LOCK_TYPE</span><br><span class="line"></span><br><span class="line">解锁：</span><br><span class="line"><span class="keyword">UNLOCK</span> <span class="keyword">TABLES</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200616123547201" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616123547201.png"></p><p>Lock_type包含read和write等。</p><p>锁为read类型的表，可读但不可写；其他会话对该表可读，但写入需要等到解锁后：</p><p><img src="/" alt="image-20200616123953421" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616123953421.png"></p><p>锁为write类型的表，可读也可写；但其他会话对该表的读或写需要等到解锁以后：</p><p><img src="/" alt="image-20200616124427459" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616124427459.png"></p><h1 id="7、MYSQL慢查询：EXPLAIN"><a href="#7、MYSQL慢查询：EXPLAIN" class="headerlink" title="7、MYSQL慢查询：EXPLAIN"></a>7、MYSQL慢查询：EXPLAIN</h1><p>explain语句用于分析MYSQL的查询性能，可以显示MySQL如何使用索引等来处理select语句以及连接表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">用<span class="keyword">explain</span>查看查询是否使用索引：</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> table_name <span class="keyword">WHERE</span> 查询条件；</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">对表Sheet1建立索引i1后，用<span class="keyword">explain</span>查看任意查询情况：</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> Sheet1 <span class="keyword">where</span> <span class="built_in">number</span> = <span class="number">1601</span>;</span><br></pre></td></tr></table></figure><p>explain查询结果type为ref，即使用了索引查询，而非全表遍历查询all；所使用的索引(possible keys/key)为i1：</p><p><img src="/" alt="image-20200616213133759" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616213133759.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作-TCL</title>
      <link href="/2020/06/16/5%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-TCL/"/>
      <url>/2020/06/16/5%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-TCL/</url>
      
        <content type="html"><![CDATA[<h1 id="TCL"><a href="#TCL" class="headerlink" title="TCL"></a>TCL</h1><blockquote><p><strong>TCL（Transaction Control Language），事务控制语言。</strong></p><p>主要用途：对数据库进行事务控制的指令。</p><p>操纵命令：COMMIT、ROLLBACK、SAVEPOINT、SET TRANSACTION</p><p>COMMIT：提交事务。</p><p>ROLLBACK：回滚操作。</p><p>SAVEPOINT：设置保存点。</p><p>SET TRANSACTION：改变事务选项。</p></blockquote><h1 id="1、什么是事务？"><a href="#1、什么是事务？" class="headerlink" title="1、什么是事务？"></a>1、什么是事务？</h1><p>事务是数据库操作的逻辑单元，包含一系列数据操作，是一个不可分割的整体。</p><p>事务的特性——ACID：</p><p>原子性(Atomicity)，其包含的所有数据库操作指令要么都执行，如有执行失败会回滚为全都不执行。</p><p>一致性(Consistency)，执行前后的数据库有效性是一致的。</p><p>隔离性(lsolation)，一个事务不受其他事务的干扰，在多用户并发访问时相互不受干扰。</p><p>持久性(Durability)，一旦提交了事务，数据的改变永久保存本地。</p><h1 id="2、事务的提交：COMMIT"><a href="#2、事务的提交：COMMIT" class="headerlink" title="2、事务的提交：COMMIT"></a>2、事务的提交：COMMIT</h1><p>事务的执行内容只有使用commit进行提交后，其中的修改操作才可以成为永久性操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">先转换MYSQL结束符：</span><br><span class="line">DELIMITER //</span><br><span class="line"></span><br><span class="line">事务结构：</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>｜<span class="keyword">BEGIN</span>:</span><br><span class="line">查询主体;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">对user表进行如下事务操作：</span><br><span class="line">1. 姓名为Olivia的人员年龄修改为40</span><br><span class="line">2. 插入新记录user_id为018的男性在职人员Ian，年龄23，电话13173629832，部门为CS</span><br><span class="line">3. 删除原表中user_id为017的记录</span><br><span class="line">4. 查询上述修改结果</span><br><span class="line"></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> age = <span class="string">'40'</span> <span class="keyword">where</span> user_name = <span class="string">'Olivia'</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">user</span> <span class="keyword">values</span>(<span class="string">'018'</span>,<span class="string">'Ian'</span>,<span class="string">'23'</span>,<span class="string">'0'</span>,<span class="string">'13173629832'</span>,<span class="string">'0'</span>,<span class="string">'CS'</span>);</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_id = <span class="string">'017'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_dept = <span class="string">'CS'</span> <span class="keyword">or</span> user_name  = <span class="string">'Olivia'</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">//</span><br></pre></td></tr></table></figure><p>我们先查询事务执行前的相关表内容：</p><p><img src="/" alt="image-20200614215919792" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614215919792.png"></p><p>执行事务：</p><img src="/" alt="image-20200614215953216" style="zoom:67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614215953216.png"><h1 id="3、事务的自动提交：AUTOCOMMIT"><a href="#3、事务的自动提交：AUTOCOMMIT" class="headerlink" title="3、事务的自动提交：AUTOCOMMIT"></a>3、事务的自动提交：AUTOCOMMIT</h1><p>autocommit参数记录了数据库是否为自动提交模式，默认状态为on：</p><img src="/" alt="image-20200614222114098" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222114098.png"><p>案例：</p><p>对user表中user_id为018的人员修改姓名为Peter，年龄为50。</p><p>我们开启两个终端，并仅将终端一的autocommit参数修改为OFF：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> autocommit = <span class="number">0</span>//</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200614222243940" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222243940.png"></p><p>在终端一进行姓名的修改操作，不执行commit。</p><p>我们可以在终端一中查询到修改后的记录：</p><p><img src="/" alt="image-20200614222411977" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222411977.png"></p><p>而在终端二中，则姓名字段为修改前的记录：</p><p><img src="/" alt="image-20200614222508525" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222508525.png"></p><p>若此时在终端二对user表进行年龄的修改操作，会因为正在进行的事务而报错：</p><p><img src="/" alt="image-20200614222723258" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222723258.png"></p><p>将终端一中的事务提交后，我们完成终端二中的修改并查询结果：</p><p><img src="/" alt="image-20200614222851509" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614222851509.png"></p><h1 id="4、事务的回滚：ROLLBACK"><a href="#4、事务的回滚：ROLLBACK" class="headerlink" title="4、事务的回滚：ROLLBACK"></a>4、事务的回滚：ROLLBACK</h1><p>事务在没有使用commit提交时，使用rollback可以将数据库恢复到事务提交前的状态。</p><p>案例：</p><p>对user表user_id为016的人员remove信息进行修改，并进行回滚操作。</p><p>修改前我们查询该条记录如下：</p><p><img src="/" alt="image-20200614224038318" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614224038318.png"></p><p>执行事务后并回滚，可以看到数据修改成功后又回滚到修改前状态：</p><p><img src="/" alt="image-20200614224156208" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614224156208.png"></p><h1 id="5、设置保存点：SAVEPOINT"><a href="#5、设置保存点：SAVEPOINT" class="headerlink" title="5、设置保存点：SAVEPOINT"></a>5、设置保存点：SAVEPOINT</h1><p>在事务中设置savepoint，可以将事务回滚到savepoint前。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">设置保存点：</span><br><span class="line"><span class="keyword">SAVEPOINT</span> savepoint_name;</span><br><span class="line"></span><br><span class="line">回滚到保存点：</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> savepoint_name;</span><br><span class="line"></span><br><span class="line">解除保存点：</span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> savepoint_name;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">transaction</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> remove = <span class="number">1</span> <span class="keyword">where</span> user_id = <span class="string">'016'</span>;</span><br><span class="line"><span class="keyword">savepoint</span> s1;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> user_id = <span class="string">'016'</span>;</span><br><span class="line"><span class="keyword">rollback</span> <span class="keyword">to</span> <span class="keyword">savepoint</span> s1;</span><br><span class="line"><span class="keyword">release</span> <span class="keyword">savepoint</span> s1;</span><br><span class="line">//</span><br></pre></td></tr></table></figure><img src="/" alt="image-20200615000422781" style="zoom: 67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615000422781.png"><h1 id="6、事物隔离级别：SET-TRANSACTION"><a href="#6、事物隔离级别：SET-TRANSACTION" class="headerlink" title="6、事物隔离级别：SET TRANSACTION"></a>6、事物隔离级别：SET TRANSACTION</h1><p>事务的隔离级别可用于防止事务的并发性问题。</p><p>事务有如下隔离级别：</p><p>​    read uncommitted 读未提交，该模式会出现脏读</p><p>​    read committed 读已提交，该模式不支持重复读</p><p>​    repeatable read 可重复读，也是MYSQL中默认隔离级别</p><p>​    serializable 串行化，不允许读写并发操作</p><h2 id="6-1、查看当前的事务隔离级别："><a href="#6-1、查看当前的事务隔离级别：" class="headerlink" title="6.1、查看当前的事务隔离级别："></a>6.1、查看当前的事务隔离级别：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'TRANSACTION ISOLATION'</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200616114343560" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616114343560.png"></p><h2 id="6-2、修改事务隔离级别："><a href="#6-2、修改事务隔离级别：" class="headerlink" title="6.2、修改事务隔离级别："></a>6.2、修改事务隔离级别：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> [<span class="keyword">GLOBAL</span>|<span class="keyword">SESSION</span>] <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span> <span class="keyword">READ</span> 新的事务隔离级别;</span><br></pre></td></tr></table></figure><p>global：设置全局默认隔离级别</p><p>session：设置本次会话隔离级别</p><p>如果二者均不写：仅设置本次事务命令的隔离级别，下一个事务将回到默认隔离级别</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例：将当前会话的隔离级别修改为read committed。</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">read</span> committed;</span><br></pre></td></tr></table></figure><p>当前会话隔离级别已更改为read committed：</p><p><img src="/" alt="image-20200616120501297" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616120501297.png"></p><p>新开终端再次查询隔离级别，其又回到了默认值repeatable read：</p><p><img src="/" alt="image-20200616121039519" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616121039519.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Mysql</title>
      <link href="/2020/06/16/1%E3%80%81%E8%AE%A4%E8%AF%86Mysql/"/>
      <url>/2020/06/16/1%E3%80%81%E8%AE%A4%E8%AF%86Mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><blockquote><p>数据库，就是数据的仓库。它是长期存储在计算机内，有组织、可共享的数据的集合。简而言之，即放置信息的文件柜。</p></blockquote><h1 id="数据库分类"><a href="#数据库分类" class="headerlink" title="数据库分类"></a>数据库分类</h1><blockquote><p>当今互联网中，最常见的数据库模型主要为两种，即关系型数据库（SQL）和非关系型数据库（NoSQL 、Not Only SQL)。</p></blockquote><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><ul><li><p>1、定义：指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解，关系型数据库这一系列的行和列被称为表，一组表组成了数据库。</p></li><li><p>2、特点</p></li><li><blockquote><p>（1）存储方式：以行和列的方式组成表格进行存储。</p><p>（2）扩展方式：只具备纵向扩展能力。</p><p>（3）查询方式：采用结构化查询语言（即SQL）进行查询。</p><p>（4）原子性：记录之前的版本，允许回滚。</p><p>（5）一致性：事务开始和结束之间的中间状态不会被其他事务看到。</p><p>（6）隔离性：适当的破坏一致性来提升性能与并行度。</p><p>（7）持久性：每一次的事务提交后就会保证不会丢失。</p></blockquote></li><li><p>3、缺点：性能没有非关系型数据库好，一旦想更改存储结构，面对海量数据，操作起来会很复杂。</p></li></ul><h2 id="非关系型数据库"><a href="#非关系型数据库" class="headerlink" title="非关系型数据库"></a>非关系型数据库</h2><blockquote><p>1、定义：数据存储不需要固定的表结构，通常也不存在连接操作。</p><p>2、特点</p><ul><li>（1）不需要预定义模式：不需要事先定义数据模式，预定义表结构。</li><li>（2）无共享架构：相对于将所有数据存储的存储区域网络中的全共享架构。</li><li>（3）弹性可扩展：可以在系统运行的时候，动态增加或者删除结点。</li><li>（4）分区：相对于将数据存放于同一个节点，NoSQL数据库需要将数据进行分区，将记录分散在多个节点上面。</li><li>（5）异步复制：和RAID存储系统不同的是，NoSQL中的复制，往往是基于日志的异步复制。</li><li>（6）BASE：相对于事务严格的ACID特性，NoSQL数据库保证的是BASE特性。</li></ul></blockquote><blockquote><p>3、适用场景</p><ul><li>（1）数据模型比较简单。</li><li>（2）需要灵活性更强的IT系统。</li><li>（3）对数据库性能要求较高。</li><li>（4）不需要高度的数据一致性。</li><li>（5）对于给定key，比较容易映射复杂值的环境。</li></ul></blockquote><h1 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h1><blockquote><p>这又是啥？</p><p>面对不同种类的数据库，如何精准获取数据库中的数据？智慧的人类创造了一个神奇的产品！！！</p><p>数据库管理系统。数据库管理系统是为管理数据库而设计的电脑软件系统，一般具有存储、截取、安全保障、备份等基础功能。</p></blockquote><h1 id="MySQL-江湖地位！"><a href="#MySQL-江湖地位！" class="headerlink" title="MySQL 江湖地位！"></a>MySQL 江湖地位！</h1><blockquote><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。它是最流行的关系型数据库管理系统之一，它也是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p></blockquote><h1 id="为啥选-MySQL"><a href="#为啥选-MySQL" class="headerlink" title="为啥选 MySQL ?"></a>为啥选 MySQL ?</h1><blockquote><p>MySQL由于其体积小、速度快、总体拥有成本低，尤其是具有开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200610232427.png"></p><h1 id="MAC安装MYSQL："><a href="#MAC安装MYSQL：" class="headerlink" title="MAC安装MYSQL："></a>MAC安装MYSQL：</h1><h2 id="下载安装包："><a href="#下载安装包：" class="headerlink" title="下载安装包："></a>下载安装包：</h2><p>点击链接下载MYSQL安装包：</p><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p><img src="/" alt="手机截图图社交软件的信息  描述已自动生成" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/clip_image001.png"></p><p>终端输入mysql,发现提示<em>command not found</em>，需要先设置环境路径；</p><p>终端输入<em>/user/local/mysql/bin</em>，查看mysql是否安装成功：</p><img src="/" alt="image-20200616214951127" style="zoom:50%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200616214951127.png"><h2 id="在终端加入环境路径："><a href="#在终端加入环境路径：" class="headerlink" title="在终端加入环境路径："></a>在终端加入环境路径：</h2><p>如果是bash,执行open ~/.bash_profile；如果是zsh,执行open ~/.zshrc；</p><p>在bash_profile或zshrc文件中添加语句<em>PATH=$PATH:/usr/local/mysql/bin</em>,并保存；</p><p>将更改立即生效：终端输入<em>source ~/.bash_profile</em> 或 <em>source ~/.zshrc</em></p><p><strong>注：</strong>如果没有zshrc文件，需要先创建空白文件，再将bash_profile的内容复制粘贴过来，包括上述语句，最后输入上述语句使修改生效</p><p><img src="/" alt="手机屏幕的截图  描述已自动生成" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/clip_image003.png"></p><h2 id="登录和退出MYSQL："><a href="#登录和退出MYSQL：" class="headerlink" title="登录和退出MYSQL："></a>登录和退出MYSQL：</h2><p>登陆：终端输入<em>mysql -uroot -p</em>，输入密码</p><img src="/" alt="手机屏幕的截图  描述已自动生成" style="zoom:67%;" / class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/clip_image004.png"><p>-u后是用户名，-p后是密码（如不是登陆本机的MYSQL，还有 -h后面加服务器主机地址）。</p><p>退出MYSQL：终端输入<em>\q;</em>   或  <em>quit;</em>   或   <em>exit;</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作-DCL</title>
      <link href="/2020/06/16/4%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DCL/"/>
      <url>/2020/06/16/4%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DCL/</url>
      
        <content type="html"><![CDATA[<h1 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h1><blockquote><p><strong>DCL（Data Control Language），数据库控制语言。</strong></p><p>主要用途：对数据库访问权限进行控制的指令。</p><p>操纵命令：GRANT、REVOKE</p><p>GRANT：对用户进行赋权。</p><p>REVOKE：对用户权限进行回收。</p></blockquote><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><p>MYSQL8.0后版本不支持grant语句直接创建用户，因此需要先创建用户，再进行赋权。</p><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'hostname'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'密码'</span>;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">'csg1'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200614195339691" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614195339691.png"></p><p>用Create创建的用户仅有系统默认权限usage，无其他权限。</p><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'hostname'</span>;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> csg1;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200614195455547" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614195455547.png"></p><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><h3 id="赋权"><a href="#赋权" class="headerlink" title="赋权"></a>赋权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> priviledge_name[(list_name1,<span class="keyword">list</span>?_name2)] <span class="keyword">ON</span> dbname.table_name <span class="keyword">FROM</span> <span class="string">'username'</span>@<span class="string">'hostname'</span>;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line">对账号'csg1'添加数据库'mysqlpractice'所有表的'<span class="keyword">select</span><span class="string">'权限。</span></span><br><span class="line"><span class="string">grant select on mysqlpractice.* to csg1;</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200614201705116" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614201705116.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line">对全库全表赋权所有权限。</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> dba@localhost;</span><br></pre></td></tr></table></figure><h3 id="查看权限"><a href="#查看权限" class="headerlink" title="查看权限"></a>查看权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看指定账号权限：</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> <span class="string">'username'</span>@<span class="string">'hostname'</span>;</span><br><span class="line"></span><br><span class="line">查看当前用户自身权限：</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span>;</span><br></pre></td></tr></table></figure><h3 id="回收权限"><a href="#回收权限" class="headerlink" title="回收权限"></a>回收权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> priviledge_name[(list_name1,<span class="keyword">list</span>?_name2)] <span class="keyword">FROM</span> dbname.table_name <span class="keyword">FROM</span> <span class="string">'username'</span>@<span class="string">'hostname'</span>;</span><br><span class="line"></span><br><span class="line">案例：</span><br><span class="line"><span class="keyword">revoke</span> <span class="keyword">select</span> <span class="keyword">on</span> mysqlpractice.* <span class="keyword">from</span> csg1;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200614202521110" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200614202521110.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作-DDL</title>
      <link href="/2020/06/16/2%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DDL/"/>
      <url>/2020/06/16/2%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DDL/</url>
      
        <content type="html"><![CDATA[<h1 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h1><blockquote><p><strong>DDL（Data Definition Language）是连接存储世界与现实世界的高铁！</strong></p></blockquote><blockquote><p>主要用途：</p><p>对数据库对象进行创建、修改、删除等操作。</p><p>操作对象：</p><p>数据库、数据表、列、索引等。</p><p>定义命令：</p><ul><li>CREATE：创建数据库或表的命令。</li><li>DROP：删除已建数据库或表。</li><li>ALTER： 添加、修改或删除列，更新表名，字段类型等。</li></ul></blockquote><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><h2 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- IF NOT EXISTS --- 不存在则创建，存在则不创建</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> DataScience;</span><br></pre></td></tr></table></figure><h2 id="2、删除数据库"><a href="#2、删除数据库" class="headerlink" title="2、删除数据库"></a>2、删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、查看所有数据库</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br><span class="line"></span><br><span class="line">2、删除指定数据库</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> DataScience;</span><br></pre></td></tr></table></figure><h2 id="3、修改数据库字符集"><a href="#3、修改数据库字符集" class="headerlink" title="3、修改数据库字符集"></a>3、修改数据库字符集</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、查看数据库字符集</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span><span class="string">'character_set_database'</span>;</span><br><span class="line"></span><br><span class="line">2、修改数据库字符集</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> DataScience <span class="built_in">character</span> <span class="keyword">SET</span> <span class="string">'gbk'</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200421154433187" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421154433187.png"></p><h2 id="4、进入数据库"><a href="#4、进入数据库" class="headerlink" title="4、进入数据库"></a>4、进入数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> DataSciecne;</span><br><span class="line"></span><br><span class="line">mysql&gt; use</span><br><span class="line">    -&gt; datascience;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h1><h2 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a>1、创建表</h2><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_name(</span><br><span class="line">column_name1 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">column_name2 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">......</span><br><span class="line">column_nameN <span class="keyword">type</span>[<span class="keyword">len</span>])</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">[ <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span>  <span class="comment">#存储引擎</span></span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8];  <span class="comment">#字符集</span></span><br></pre></td></tr></table></figure><p><strong>创建用户表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> FansUser(</span><br><span class="line">user_id <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'用户ID'</span>,</span><br><span class="line">user_name <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'名称'</span>,</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">tel <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'电话'</span>,</span><br><span class="line">sex <span class="built_in">bit</span> <span class="keyword">default</span> <span class="number">1</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200421162611901" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421162611901.png"></p><h2 id="2、删除表"><a href="#2、删除表" class="headerlink" title="2、删除表"></a>2、删除表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1、查看目前所有数据表</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span>;</span><br><span class="line"></span><br><span class="line">2、删除指定数据表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> FansUser;</span><br></pre></td></tr></table></figure><h2 id="3、修改表"><a href="#3、修改表" class="headerlink" title="3、修改表"></a>3、修改表</h2><h3 id="3-0、表名"><a href="#3-0、表名" class="headerlink" title="3.0、表名"></a>3.0、表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> FansUser <span class="keyword">rename</span> FansUser1; <span class="comment">--修改表名 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> FansUser <span class="keyword">RENAME</span> <span class="keyword">User</span>;</span><br><span class="line">||</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">User</span> <span class="keyword">RENAME</span> <span class="keyword">To</span> FansUser;</span><br></pre></td></tr></table></figure><h3 id="3-1、列名"><a href="#3-1、列名" class="headerlink" title="3.1、列名"></a>3.1、列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> FansUser <span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> old_column_name new_column_name <span class="built_in">varchar</span>(<span class="number">30</span>);<span class="comment">--修改表列名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">User</span> <span class="keyword">change</span> <span class="keyword">COLUMN</span> sex <span class="keyword">status</span> <span class="built_in">bit</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="3-2、列的类型和约束"><a href="#3-2、列的类型和约束" class="headerlink" title="3.2、列的类型和约束"></a>3.2、列的类型和约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">modify</span> <span class="keyword">status</span> <span class="built_in">char</span>(<span class="number">10</span>) <span class="comment">--修改表列类型 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">change</span> <span class="keyword">status</span> sex <span class="built_in">bit</span>(<span class="number">1</span>) <span class="comment">-- 修改类型及列名</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="修改表" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421165356875.png"></p><h3 id="3-3、新增列"><a href="#3-3、新增列" class="headerlink" title="3.3、新增列"></a>3.3、新增列</h3><blockquote><p>注意：添加新列如无特殊约束条件，则默认添加到最后一列；如果添加到指定位置，则需要注意约束条件的正确使用。</p><ul><li>FIRST 表示添加到列表的第一列</li><li>AFTER 表示添加到某个列之后</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 指定位置</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> remove <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">AFTER</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 默认添加</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span>  <span class="keyword">column</span> name1 <span class="built_in">varchar</span>(<span class="number">10</span>); <span class="comment">--添加表列</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="添加列" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421171253651.png"></p><h3 id="3-4、删除列"><a href="#3-4、删除列" class="headerlink" title="3.4、删除列"></a>3.4、删除列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> column_name1;</span><br></pre></td></tr></table></figure><h2 id="4、复制表"><a href="#4、复制表" class="headerlink" title="4、复制表"></a>4、复制表</h2><blockquote><p>user 表存在，user1 不存在。</p></blockquote><h3 id="4-0、结构"><a href="#4-0、结构" class="headerlink" title="4.0、结构"></a>4.0、结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 要复制的表 在后边。  </span></span><br><span class="line"><span class="comment"># like 只是复制表结构</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user1 <span class="keyword">LIKE</span> <span class="keyword">user</span>;</span><br><span class="line">||</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通过关键字as</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">0</span>;</span><br><span class="line">||</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="4-1、数据及内容"><a href="#4-1、数据及内容" class="headerlink" title="4.1、数据及内容"></a>4.1、数据及内容</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--通过关键字as通过复制另一张表的表结构和数据创建新表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h3 id="4-2、部分数据"><a href="#4-2、部分数据" class="headerlink" title="4.2、部分数据"></a>4.2、部分数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 根据条件创建表，并且将查询出来得数，存入表中</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> selecet * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age&lt;<span class="number">25</span>;</span><br></pre></td></tr></table></figure><h3 id="4-3、部分字段"><a href="#4-3、部分字段" class="headerlink" title="4.3、部分字段"></a>4.3、部分字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 查询部分字段数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> age,<span class="keyword">name</span> <span class="keyword">form</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>索引相当于数据表的目录，其优点是可以提高检索数据的速度，但同时也增加了系统维护工作，以及会减慢写入速度。</p><p>索引不适用场景</p><ul><li>数据较少的表或列</li><li>查询频率较低的列</li><li>数据类型为 TEXT 、IMAGE、BIT 的数据</li><li>字段经常性修改</li><li>不常出现在 WHERE 子句及排序的字段</li></ul><p>索引选取类型</p><ul><li>占用空间较少的数据型优选</li><li>简单的整型数据优于字符型</li><li>避开存在 NULL 以及 NOT NULL的字段</li></ul><p>索引选取字段</p><ul><li>数据表的主键、外键</li><li>常与其他数据表进行连接的字段</li><li>常出现在 WHERE 子句中的字段</li><li>常用于排序的字段</li></ul><p><img src="/" alt="image-20200617012711527" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200617012711527.png"></p><h2 id="1、创建索引"><a href="#1、创建索引" class="headerlink" title="1、创建索引"></a>1、创建索引</h2><p>方法一：在创建表时创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line">column_name1 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">column_name2 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">......</span><br><span class="line">column_nameN <span class="keyword">type</span>[<span class="keyword">len</span>])</span><br><span class="line">[<span class="keyword">UNIQUE</span>/FULLTEXT/SPATIAL] <span class="keyword">INDEX</span> [index_name](column_name[(<span class="keyword">length</span>)])</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200615234627711" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615234627711.png"></p><p>方法二：在已存在的表中创建索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>/FULLTEXT/SPATIAL] <span class="keyword">INDEX</span> index_name</span><br><span class="line"><span class="keyword">ON</span> table_name(column_name[(<span class="keyword">length</span>)])</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200615234744055" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615234744055.png"></p><p><strong>关于length参数：</strong>如果是 CHAR，VARCHAR 类型，length 可以小于字段实际长度；如果是 BLOB 和 TEXT 类型，必须指定length。</p><h2 id="2、查看索引-amp-删除索引"><a href="#2、查看索引-amp-删除索引" class="headerlink" title="2、查看索引&amp;删除索引"></a>2、查看索引&amp;删除索引</h2><p>索引不能修改，想更改索引只能删除后重新创建。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看：</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> table_name;</span><br><span class="line">删除：</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> table_name;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200615235059930" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200615235059930.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2020/05/06/Redis/"/>
      <url>/2020/05/06/Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h1><blockquote><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。</p></blockquote><h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">windows版本：</span><br><span class="line"> https://github.com/MSOpenTech/redis/releases</span><br><span class="line">Linux版本：</span><br><span class="line"> 官网下载：</span><br><span class="line">     http://www.redis.cn/</span><br><span class="line"> git下载</span><br><span class="line">     https://github.com/antirez/redis/releases</span><br></pre></td></tr></table></figure><p>我们现在讨论的是windows下的安装部署，目前windows下最新版本是：3.2.100。</p><p>下载地址，提供多种下载内容，<br><code>Redis-x64-3.2.100.msi</code>是在windows下，最简单的安装文件，方便，直接会将Redis写入windows服务。<br><code>Redis-x64-3.2.100.zip</code>是需要解压安装的，接下来讨论的是这种。<br><code>Source code (zip)</code>源码的zip压缩版<br><code>Source code (tar.gz)</code>源码的tar.gz压缩版</p></blockquote><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>以 <code>Redis-x64-3.2.100.msi</code> 为例，下载之后运行</p><p><img src="/" alt="安装步骤" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409004147.png"></p><p><img src="/" alt="需要注意的配置" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409004259.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409004337.png"></p><p><img src="/" alt="下一步安装install" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409004414.png"></p><p><img src="/" alt="完成" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409004449.png"></p><h2 id="3、启动"><a href="#3、启动" class="headerlink" title="3、启动"></a>3、启动</h2><blockquote><p>通过cmd指定到该redis目录。<br>使用命令：redis-server.exe 启动服务</p><p>或者到对应目录启动即可。</p></blockquote><h2 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h2><blockquote><p>参考安装完之后的生成文档</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">如果您使用MSI包安装了Redis，那么Redis已经作为Windows服务安装了。没有别的事可做。如果您想要更改它的设置，您可以更新Redis .windows-service.conf文件，然后重新启动Redis服务(运行-&gt;服务。msc -&gt; Redis -&gt;重启)。</span><br><span class="line">在安装MSI期间，您可以使用安装程序的用户界面来更新Redis监听的端口和防火墙异常，或者在没有UI的情况下静默运行它。下面的例子展示了如何从命令行安装:</span><br><span class="line"></span><br><span class="line">default install (port 6379 and firewall exception ON):</span><br><span class="line">        msiexec /i Redis-Windows-x64.msi </span><br><span class="line">set port and turn OFF firewall exception:</span><br><span class="line">        msiexec /i Redis-Windows-x64.msi PORT=1234 ADD_FIREWALL_RULE=""</span><br><span class="line">set port and turn ON firewall exception:</span><br><span class="line">        msiexec /i Redis-Windows-x64.msi PORT=1234 ADD_FIREWALL_RULE =1</span><br><span class="line">install with no user interface:</span><br><span class="line">        msiexec /quiet /i Redis-Windows-x64.msi</span><br><span class="line"></span><br><span class="line">如果您没有使用MSI包安装Redis，那么您仍然可以按照以下说明运行Redis作为Windows服务:</span><br><span class="line">为了更好地与Windows服务模型集成，在Redis中引入了新的命令行参数。这些服务参数需要一个提升的用户上下文，以便连接到服务控制管理器。如果这些命令是从非提升的上下文调用的，那么Redis将尝试创建一个提升的上下文来执行这些命令。这将导致一个用户帐户控制对话框显示在窗口，并可能需要Admini</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">安装服务</span></span><br><span class="line">这必须是redis-server命令行的第一个参数。参数按服务启动时发生在Redis中的顺序传递。该服务将被配置为自动启动，并将作为“NT AUTHORITY\NetworkService”启动。安装成功后，将显示一条成功消息，Redis将退出。</span><br><span class="line">此命令不启动服务。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">例如：</span></span><br><span class="line">redis-server --service-install redis.windows-service.conf --loglevel verbose</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">卸载服务</span></span><br><span class="line">--service-uninstall</span><br><span class="line"></span><br><span class="line">这将从注册表中删除Redis服务配置信息。卸载成功后，将显示一条成功消息，Redis将退出。</span><br><span class="line">这并不命令不停止服务。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">例如</span></span><br><span class="line">redis-server --service-uninstall</span><br><span class="line">Starting the Service</span><br><span class="line">--service-start</span><br><span class="line">这将启动Redis服务。成功启动后，将显示一条成功消息并开始运行Redis。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">例如</span></span><br><span class="line">redis-server --service-start</span><br><span class="line">Stopping the Service</span><br><span class="line">--service-stop</span><br><span class="line">这将停止Redis服务。成功终止后，将显示一条成功消息，Redis将退出。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">例如</span></span><br><span class="line">redis-server --service-stop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">命令服务</span></span><br><span class="line">--service-name name</span><br><span class="line"></span><br><span class="line">此可选参数可与前面的任何命令一起使用，以设置安装的服务的名称。该参数应该位于service-install、service-start、service-stop或service-uninstall命令之后，并位于通过service-install命令传递给Redis的任何参数之前。</span><br><span class="line">下面将安装并启动三个独立的Redis服务实例:</span><br><span class="line">redis-server --service-install --service-name redisService1 --port 10001</span><br><span class="line">redis-server --service-start --service-name redisService1</span><br><span class="line">redis-server --service-install --service-name redisService2 --port 10002</span><br><span class="line">redis-server --service-start --service-name redisService2</span><br><span class="line">redis-server --service-install --service-name redisService3 --port 10003</span><br><span class="line">redis-server --service-start --service-name redisService3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试</span></span><br><span class="line">启动服务</span><br><span class="line">redis-server --service-start</span><br><span class="line"></span><br><span class="line">客户端</span><br><span class="line">命令：</span><br><span class="line"></span><br><span class="line">精简模式：</span><br><span class="line">redis-cli.exe</span><br><span class="line">指定模式：</span><br><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379 -a requirepass</span><br><span class="line">(-h 服务器地址  -p 指定端口号 -a 连接数据库的密码[可以在redis.windows.conf中配置]，默认无密码)</span><br></pre></td></tr></table></figure><h2 id="5、Redis工具"><a href="#5、Redis工具" class="headerlink" title="5、Redis工具"></a>5、Redis工具</h2><blockquote><p>Redis Desktop Manager</p><p><a href="https://redisdesktop.com/pricing" target="_blank" rel="noopener">https://redisdesktop.com/pricing</a></p></blockquote><p><img src="/" alt="GhRyfe.png" class="lazyload" data-src="https://s1.ax1x.com/2020/04/09/GhRyfe.png"></p><blockquote><p>注意：Redis支持多个数据库，并且每个数据库的数据是隔离的不能共享，并且基于单机才有，如果是集群就没有数据库的概念。</p><p>Redis是一个字典结构的存储服务器，而实际上一个Redis实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。</p><p>每个数据库对外都是一个从0开始的递增数字命名，Redis默认支持16个数据库（可以通过配置文件支持更多，无上限），可以通过配置databases来修改这一数字。客户端与Redis建立连接后会自动选择0号数据库，不过可以随时使用SELECT命令更换数据库。</p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/20200409094223.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DBeaver安装</title>
      <link href="/2020/05/06/DBeaver%E5%AE%89%E8%A3%85/"/>
      <url>/2020/05/06/DBeaver%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="DBeaver"><a href="#DBeaver" class="headerlink" title="DBeaver"></a>DBeaver</h1><h1 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h1><blockquote><p> 官方链接：<a href="https://dbeaver.io/" target="_blank" rel="noopener">https://dbeaver.io/</a></p></blockquote><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><blockquote><p>双击打开应用程序。只需要更改存储位置即可。</p></blockquote><h2 id="3、新建"><a href="#3、新建" class="headerlink" title="3、新建"></a>3、新建</h2><p><img src="/" alt="image-20200502181911650" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502181911650.png"></p><h2 id="4、下载驱动文件"><a href="#4、下载驱动文件" class="headerlink" title="4、下载驱动文件"></a>4、下载驱动文件</h2><p><img src="/" alt="image-20200502182023049" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502182023049.png"></p><h2 id="5、-链接数据库"><a href="#5、-链接数据库" class="headerlink" title="5、 链接数据库"></a>5、 链接数据库</h2><p><img src="/" alt="image-20200502182125791" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502182125791.png"></p><h2 id="6、测试链接"><a href="#6、测试链接" class="headerlink" title="6、测试链接"></a>6、测试链接</h2><p><img src="/" alt="image-20200502182143682" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502182143682.png"></p><h2 id="7、更改主题"><a href="#7、更改主题" class="headerlink" title="7、更改主题"></a>7、更改主题</h2><blockquote><p>根据自己爱好设定。</p></blockquote><p><img src="/" alt="image-20200502183628801" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502183628801.png"></p><h2 id="8、查询数据"><a href="#8、查询数据" class="headerlink" title="8、查询数据"></a>8、查询数据</h2><p><img src="/" alt="image-20200502185145633" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200502185145633.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 链接工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库操作-DDL</title>
      <link href="/2020/05/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DDL/"/>
      <url>/2020/05/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C-DDL/</url>
      
        <content type="html"><![CDATA[<h1 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h1><blockquote><p><strong>DDL（Data Definition Language）是连接存储世界与现实世界的高铁！</strong></p></blockquote><blockquote><p>主要用途：</p><p>对数据库对象进行创建、修改、删除等操作。</p><p>操作对象：</p><p>数据库、数据表、列、索引等。</p><p>定义命令：</p><ul><li>CREATE：创建数据库或表的命令。</li><li>DROP：删除已建数据库或表。</li><li>ALTER： 添加、修改或删除列，更新表名，字段类型等</li></ul></blockquote><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><h2 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- IF NOT EXISTS --- 不存在则创建，存在则不创建</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> DataScience;</span><br></pre></td></tr></table></figure><h2 id="2、删除数据库"><a href="#2、删除数据库" class="headerlink" title="2、删除数据库"></a>2、删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、查看所有数据库</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br><span class="line"></span><br><span class="line">2、删除指定数据库</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> DataScience;</span><br></pre></td></tr></table></figure><h2 id="3、修改数据库字符集"><a href="#3、修改数据库字符集" class="headerlink" title="3、修改数据库字符集"></a>3、修改数据库字符集</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、查看数据库字符集</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span><span class="string">'character_set_database'</span>;</span><br><span class="line"></span><br><span class="line">2、修改数据库字符集</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> DataScience <span class="built_in">character</span> <span class="keyword">SET</span> <span class="string">'gbk'</span>;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200421154433187" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421154433187.png"></p><h2 id="4、进入数据库"><a href="#4、进入数据库" class="headerlink" title="4、进入数据库"></a>4、进入数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> DataSciecne;</span><br><span class="line"></span><br><span class="line">mysql&gt; use</span><br><span class="line">    -&gt; datascience;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h1><h2 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a>1、创建表</h2><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_name(</span><br><span class="line">list_name1 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">list_name2 <span class="keyword">type</span>[<span class="keyword">len</span>],</span><br><span class="line">......</span><br><span class="line">list_nameN <span class="keyword">type</span>[<span class="keyword">len</span>])</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">[ <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span>  <span class="comment">#存储引擎</span></span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8];  <span class="comment">#字符集</span></span><br></pre></td></tr></table></figure><p><strong>创建用户表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> FansUser(</span><br><span class="line">user_id <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'用户ID'</span>,</span><br><span class="line">user_name <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'名称'</span>,</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">tel <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'电话'</span>,</span><br><span class="line">sex <span class="built_in">bit</span> <span class="keyword">default</span> <span class="number">1</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200421162611901" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421162611901.png"></p><h2 id="2、删除表"><a href="#2、删除表" class="headerlink" title="2、删除表"></a>2、删除表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、查看目前所有数据表</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span>;</span><br><span class="line">1、删除指定数据表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> FansUser;</span><br></pre></td></tr></table></figure><h2 id="3、修改表"><a href="#3、修改表" class="headerlink" title="3、修改表"></a>3、修改表</h2><h3 id="3-0、表名"><a href="#3-0、表名" class="headerlink" title="3.0、表名"></a>3.0、表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> FansUser <span class="keyword">rename</span> FansUser1; <span class="comment">--修改表名 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> FansUser <span class="keyword">RENAME</span> <span class="keyword">User</span>;</span><br><span class="line">||</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">User</span> <span class="keyword">RENAME</span> <span class="keyword">To</span> FansUser;</span><br></pre></td></tr></table></figure><h3 id="3-1、列名"><a href="#3-1、列名" class="headerlink" title="3.1、列名"></a>3.1、列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> FansUser <span class="keyword">CHANGE</span> <span class="keyword">COLUMN</span> old_column_name new_column_name <span class="built_in">varchar</span>(<span class="number">30</span>);<span class="comment">--修改表列名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">User</span> <span class="keyword">change</span> <span class="keyword">COLUMN</span> sex <span class="keyword">status</span> <span class="built_in">bit</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="3-2、列的类型和约束"><a href="#3-2、列的类型和约束" class="headerlink" title="3.2、列的类型和约束"></a>3.2、列的类型和约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">modify</span> <span class="keyword">status</span> <span class="built_in">char</span>(<span class="number">10</span>) <span class="comment">--修改表列类型 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">User</span> <span class="keyword">change</span> <span class="keyword">status</span> sex <span class="built_in">bit</span>(<span class="number">1</span>) <span class="comment">-- 修改类型及列名</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="修改表" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421165356875.png"></p><h3 id="3-3、新增列"><a href="#3-3、新增列" class="headerlink" title="3.3、新增列"></a>3.3、新增列</h3><blockquote><p>注意：添加新列如无特殊约束条件，则默认添加到最后一列；如果添加到指定位置，则需要注意约束条件的正确使用。</p><ul><li>FIRST 表示添加到列表的第一列</li><li>AFTER 表示添加到某个列之后</li></ul></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 指定位置</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> remove <span class="built_in">bit</span>(<span class="number">1</span>) <span class="keyword">AFTER</span> age;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 默认添加</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span>  <span class="keyword">column</span> name1 <span class="built_in">varchar</span>(<span class="number">10</span>); <span class="comment">--添加表列</span></span><br></pre></td></tr></table></figure><p><img src="/" alt="添加列" class="lazyload" data-src="https://cdn.jsdelivr.net/gh/MineSQL/cdn/img/image-20200421171253651.png"></p><h3 id="3-4、删除列"><a href="#3-4、删除列" class="headerlink" title="3.4、删除列"></a>3.4、删除列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span> <span class="keyword">user</span> <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> name1;</span><br></pre></td></tr></table></figure><h2 id="4、复制表"><a href="#4、复制表" class="headerlink" title="4、复制表"></a>4、复制表</h2><blockquote><p>user 表存在，user1 不存在。</p></blockquote><h3 id="4-0、结构"><a href="#4-0、结构" class="headerlink" title="4.0、结构"></a>4.0、结构</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 要复制的表 在后边。  </span></span><br><span class="line"><span class="comment"># like 只是复制表结构</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> user1 <span class="keyword">LIKE</span> <span class="keyword">user</span>;</span><br><span class="line">||</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通过关键字as</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">0</span> ;</span><br><span class="line">||</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="4-1、数据及内容"><a href="#4-1、数据及内容" class="headerlink" title="4.1、数据及内容"></a>4.1、数据及内容</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--通过关键字as通过复制另一张表的表结构和数据创建新表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><h3 id="4-2、部分数据"><a href="#4-2、部分数据" class="headerlink" title="4.2、部分数据"></a>4.2、部分数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据条件创建表，并且将查询出来得数，存入表中</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> selecet * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> age&lt;<span class="number">25</span>;</span><br></pre></td></tr></table></figure><h3 id="4-3、部分字段"><a href="#4-3、部分字段" class="headerlink" title="4.3、部分字段"></a>4.3、部分字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询部分字段数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user1 <span class="keyword">as</span> <span class="keyword">select</span> age,<span class="keyword">name</span> <span class="keyword">form</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Mysql</title>
      <link href="/2020/05/06/%E8%AE%A4%E8%AF%86Mysql/"/>
      <url>/2020/05/06/%E8%AE%A4%E8%AF%86Mysql/</url>
      
        <content type="html"><![CDATA[<p><strong>背景介绍</strong></p><blockquote><p>数据库，就是数据的仓库。它是长期存储在计算机内，有组织、可共享的数据的集合。简而言之，即放置信息的文件柜。</p></blockquote><p><strong>数据库分类</strong></p><blockquote><p>当今互联网中，最常见的数据库模型主要为两种，即关系型数据库（SQL）和非关系型数据库（NoSQL 、Not Only SQL)。</p></blockquote><p><strong>关系型数据库</strong></p><ul><li><p>1、定义：指采用了关系模型来组织数据的数据库，其以行和列的形式存储数据，以便于用户理解，关系型数据库这一系列的行和列被称为表，一组表组成了数据库。</p></li><li><p>2、特点</p></li><li><blockquote><p>（1）存储方式：以行和列的方式组成表格进行存储。</p><p>（2）扩展方式：只具备纵向扩展能力。</p><p>（3）查询方式：采用结构化查询语言（即SQL）进行查询。</p><p>（4）原子性：记录之前的版本，允许回滚。</p><p>（5）一致性：事务开始和结束之间的中间状态不会被其他事务看到。</p><p>（6）隔离性：适当的破坏一致性来提升性能与并行度。</p><p>（7）持久性：每一次的事务提交后就会保证不会丢失。</p></blockquote></li><li><p>3、缺点：性能没有非关系型数据库好，一旦想更改存储结构，面对海量数据，操作起来会很复杂。</p></li></ul><p><strong>非关系型数据库</strong></p><blockquote><p>1、定义：数据存储不需要固定的表结构，通常也不存在连接操作。</p><p>2、特点</p><ul><li>（1）不需要预定义模式：不需要事先定义数据模式，预定义表结构。</li><li>（2）无共享架构：相对于将所有数据存储的存储区域网络中的全共享架构。</li><li>（3）弹性可扩展：可以在系统运行的时候，动态增加或者删除结点。</li><li>（4）分区：相对于将数据存放于同一个节点，NoSQL数据库需要将数据进行分区，将记录分散在多个节点上面。</li><li>（5）异步复制：和RAID存储系统不同的是，NoSQL中的复制，往往是基于日志的异步复制。</li><li>（6）BASE：相对于事务严格的ACID特性，NoSQL数据库保证的是BASE特性。</li></ul></blockquote><p>3、适用场景</p><ul><li>（1）数据模型比较简单。</li><li>（2）需要灵活性更强的IT系统。</li><li>（3）对数据库性能要求较高。</li><li>（4）不需要高度的数据一致性。</li><li>（5）对于给定key，比较容易映射复杂值的环境。</li></ul><p><strong>数据库管理系统</strong></p><blockquote><p><strong>这又是啥？</strong></p><p>面对不同种类的数据库，如何精准获取数据库中的数据？智慧的人类创造了一个神奇的产品！！！</p><p>数据库管理系统。数据库管理系统是为管理数据库而设计的电脑软件系统，一般具有存储、截取、安全保障、备份等基础功能。</p></blockquote><p><strong>MySQL 江湖地位！</strong></p><blockquote><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。它是<strong>最流行</strong>的关系型数据库管理系统之一，它也是<strong>最好的</strong> RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p></blockquote><p><strong>为啥选 MySQL ?</strong></p><blockquote><p>MySQL由于其<strong>体积小</strong>、<strong>速度快</strong>、总体拥有<strong>成本低</strong>，尤其是具有<strong>开放源码</strong>这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据集群</title>
      <link href="/2020/05/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4/"/>
      <url>/2020/05/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="VM安装"><a href="#VM安装" class="headerlink" title="VM安装"></a>VM安装</h1><h2 id="0、下载"><a href="#0、下载" class="headerlink" title="0、下载"></a>0、下载</h2><blockquote><p><a href="https://www.vmware.com/cn/products/workstation-pro.html" target="_blank" rel="noopener">VMware Workstation Pro</a> 确立了在单台 Linux 或 Windows PC 上运行多个操作系统的行业标准。</p><p>Workstation 15.5 Pro 通过提供全新的用户界面控件，支持巨型帧以及最新的 Windows 和 Linux 操作系统等，进一步完善了领先的桌面…</p></blockquote><p><strong>链接直达：</strong></p><blockquote><p><a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html" target="_blank" rel="noopener">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p></blockquote><h2 id="1、以管理员身份运行"><a href="#1、以管理员身份运行" class="headerlink" title="1、以管理员身份运行"></a>1、以管理员身份运行</h2><p>找到下载的程序，右击</p><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729370.png"></p><h2 id="2、下一步"><a href="#2、下一步" class="headerlink" title="2、下一步"></a>2、下一步</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729474.png"></p><h2 id="3、接收协议"><a href="#3、接收协议" class="headerlink" title="3、接收协议"></a>3、接收协议</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729580.png"></p><h2 id="4、更改安装目录"><a href="#4、更改安装目录" class="headerlink" title="4、更改安装目录"></a>4、更改安装目录</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729671.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729761.png"></p><h2 id="5、安装"><a href="#5、安装" class="headerlink" title="5、安装"></a>5、安装</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729865.png"></p><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223729960.png"></p><p>点击下一步，点击<strong>安装</strong></p><h2 id="6、完成"><a href="#6、完成" class="headerlink" title="6、完成"></a>6、完成</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/2020050122373070.png"></p><h2 id="许可证"><a href="#许可证" class="headerlink" title="许可证"></a>许可证</h2><p><strong>激活密钥</strong></p><blockquote><p>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</p></blockquote><h1 id="VM使用"><a href="#VM使用" class="headerlink" title="VM使用"></a>VM使用</h1><h2 id="0、启动"><a href="#0、启动" class="headerlink" title="0、启动"></a>0、启动</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730176.png"></p><h2 id="1、更改存储位置"><a href="#1、更改存储位置" class="headerlink" title="1、更改存储位置"></a>1、更改存储位置</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730268.png"></p><h2 id="2、更改共享位置"><a href="#2、更改共享位置" class="headerlink" title="2、更改共享位置"></a>2、更改共享位置</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730354.png"></p><h2 id="3、虚拟网络"><a href="#3、虚拟网络" class="headerlink" title="3、虚拟网络"></a>3、虚拟网络</h2><blockquote><p>虚拟机网络相关配置</p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730439.png"></p><p><strong>详细设置</strong></p><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730530.png"></p><h1 id="cloudera"><a href="#cloudera" class="headerlink" title="cloudera"></a>cloudera</h1><blockquote><p>cloudera-quickstart-vm-5.13.0-0-vmware （目前已经不可下载）</p><p><a href="https://www.cloudera.com/products/open-source/apache-hadoop/key-cdh-components.html" target="_blank" rel="noopener">https://www.cloudera.com/products/open-source/apache-hadoop/key-cdh-components.html</a></p></blockquote><h2 id="VM快速学习"><a href="#VM快速学习" class="headerlink" title="VM快速学习"></a>VM快速学习</h2><blockquote><p>目前最高版本是 5.16</p><p><a href="https://docs.cloudera.com/documentation/enterprise/5-16-x/topics/cloudera_quickstart_vm.html" target="_blank" rel="noopener">https://docs.cloudera.com/documentation/enterprise/5-16-x/topics/cloudera_quickstart_vm.html</a></p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730616.png"></p><h2 id="1、导入虚拟机"><a href="#1、导入虚拟机" class="headerlink" title="1、导入虚拟机"></a>1、导入虚拟机</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730703.png"></p><h2 id="2、编辑虚拟机设置"><a href="#2、编辑虚拟机设置" class="headerlink" title="2、编辑虚拟机设置"></a>2、编辑虚拟机设置</h2><blockquote><p>最低配置： *<em>4G，4G ，4G *</em>—- 4G 1cores 64GB</p><p>小编配置： 8G 2cores 64GB</p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730797.png"></p><h2 id="3、开启虚拟机"><a href="#3、开启虚拟机" class="headerlink" title="3、开启虚拟机"></a>3、开启虚拟机</h2><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730880.png"></p><h2 id="4、成功启动"><a href="#4、成功启动" class="headerlink" title="4、成功启动"></a>4、成功启动</h2><blockquote><p>等候片刻，根据机器配置来讲，成功创建。如下图</p></blockquote><p><img src="/" alt="" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223730982.png"></p><h2 id="5、更改IP"><a href="#5、更改IP" class="headerlink" title="5、更改IP"></a>5、更改IP</h2><p><strong>centos ip更改</strong></p><blockquote><p>默认值：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DEVICE="eth0"</span><br><span class="line">BOOTPROTO="dhcp"</span><br><span class="line">DHCP_HOSTNAME="quickstart.cloudera"</span><br><span class="line">HOSTNAME="quickstart.cloudera"</span><br><span class="line">HWADDR="00:0C:29:D3:4D:5C"</span><br><span class="line">IPV6INIT="no"</span><br><span class="line">MTU="1500"</span><br><span class="line">NM_CONTROLLED="yes"</span><br><span class="line">ONBOOT="yes"</span><br><span class="line">TYPE="Ethernet"</span><br><span class="line">UUID="f127faf3-7a1f-4bca-a404-0119665a8459"</span><br></pre></td></tr></table></figure><p> 注意：使用<code>sudo</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br></pre></td></tr></table></figure><p><strong>修改为</strong>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DEVICE="eth0"</span><br><span class="line">BOOTPROTO="static"</span><br><span class="line">DHCP_HOSTNAME="quickstart.cloudera"</span><br><span class="line">HOSTNAME="quickstart.cloudera"</span><br><span class="line">HWADDR="00:0C:29:D3:4D:5C"</span><br><span class="line">IPV6INIT="no"</span><br><span class="line">MTU="1500"</span><br><span class="line">NM_CONTROLLED="yes"</span><br><span class="line">ONBOOT="yes"</span><br><span class="line">TYPE="Ethernet"</span><br><span class="line">UUID="f127faf3-7a1f-4bca-a404-0119665a8459"</span><br><span class="line">IPADDR=192.168.6.6</span><br><span class="line">NETMASK=255.255.255.0</span><br></pre></td></tr></table></figure><p><code>重新启动即可:</code></p><blockquote><p>sudo service network restart</p></blockquote><h2 id="6、启动异常解决方案"><a href="#6、启动异常解决方案" class="headerlink" title="6、启动异常解决方案"></a>6、启动异常解决方案</h2><p><strong>异常解决</strong></p><p><img src="/" alt="image-20200501093409630" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223731194.png"></p><p><strong>重新添加网卡</strong></p><p><img src="/" alt="image-20200501093456619" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223731377.png"></p><p>复制MAC地址：</p><p><img src="/" alt="image-20200501094007166" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223731569.png"></p><p>更改：</p><blockquote><ol><li>DEVICE = eth2</li><li>HWADDR —- 为你的地址值</li></ol></blockquote><p><img src="/" alt="image-20200501093303582" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223731768.png"></p><p><strong>再次重新启动</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.重启服务</span><br><span class="line">sudo service network restart</span><br><span class="line"></span><br><span class="line">2.查看ip</span><br><span class="line">ip addr/ifconfig</span><br></pre></td></tr></table></figure><p><img src="/" alt="image-20200501094403920" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223731978.png"></p><h1 id="MobaXterm"><a href="#MobaXterm" class="headerlink" title="MobaXterm"></a>MobaXterm</h1><h2 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h2><p><strong>MobaXterm</strong></p><blockquote><p><a href="https://mobaxterm.mobatek.net/download-home-edition.html" target="_blank" rel="noopener">https://mobaxterm.mobatek.net/download-home-edition.html</a></p></blockquote><p><img src="/" alt="image-20200430232141238" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/2020050122373275.png"></p><h2 id="2、启动"><a href="#2、启动" class="headerlink" title="2、启动"></a>2、启动</h2><p><img src="/" alt="image-20200430231358860" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223732163.png"></p><h2 id="3、配置"><a href="#3、配置" class="headerlink" title="3、配置"></a>3、配置</h2><p><img src="/" alt="image-20200501094919514" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223732353.png"></p><h2 id="4、登录"><a href="#4、登录" class="headerlink" title="4、登录"></a>4、登录</h2><blockquote><p> 输入密码，保存。</p></blockquote><p><img src="/" alt="image-20200501094730836" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223732553.png"></p><h2 id="5、查看"><a href="#5、查看" class="headerlink" title="5、查看"></a>5、查看</h2><p><img src="/" alt="image-20200501095056624" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/20200501223732744.png"></p><blockquote><p>相关安装包，请联系小编获取。</p><p>欢迎访问 小编博客 ：  <a href="http://www.a2data.cn" target="_blank" rel="noopener">www.a2data.cn</a><br>全力打造 SQL社区：   <a href="http://www.sqlsq.cn" target="_blank" rel="noopener">www.sqlsq.cn</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Cloudera </tag>
            
            <tag> MobaXterm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床搭建 </title>
      <link href="/2020/05/06/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/05/06/%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h1><h2 id="1、安装PicGo"><a href="#1、安装PicGo" class="headerlink" title="1、安装PicGo"></a>1、安装PicGo</h2><p><strong>GitHub地址</strong></p><blockquote><p><a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p></blockquote><blockquote><p>访问 <a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">PicGo</a>选择 PicGo-Setup-XXX.exe下载软件安装包（GitHub直接下载速度会有些慢甚至无法完成下载，可选择使用迅雷下载，亲测有用）</p><p>或者联系小编，小编有 <code>微云+ 百度云</code>高效连接。</p></blockquote><h2 id="2、安装选项"><a href="#2、安装选项" class="headerlink" title="2、安装选项"></a>2、安装选项</h2><blockquote><ol><li><p>安装软件时选择<strong>仅为我安装</strong>，另外注意不要安装在C盘</p></li><li><p><strong>安装node.js</strong>：点击 <a href="https://nodejs.org/dist/v12.16.1/node-v12.16.1-x64.msi" target="_blank" rel="noopener">nodejs</a> 下载完安装包后进行安装，除了更改安装位置外，一路默认完成安装即可</p></li><li><p><strong>更换镜像源</strong>：进入命令行执行以下命令</p><p><code>npm config set registry https://registry.npm.taobao.org</code></p></li></ol></blockquote><h2 id="3、安装完成"><a href="#3、安装完成" class="headerlink" title="3、安装完成"></a>3、安装完成</h2><p><img src="/" alt="image-20200501104540308" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501104540308.png"></p><h1 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h1><h2 id="1、打开PicGo"><a href="#1、打开PicGo" class="headerlink" title="1、打开PicGo"></a>1、打开PicGo</h2><p>运行软件打开插件设置搜索<strong>gitHub</strong>，安装github-plus插件</p><h2 id="2、创建Gitee图床仓库"><a href="#2、创建Gitee图床仓库" class="headerlink" title="2、创建Gitee图床仓库"></a>2、创建Gitee图床仓库</h2><blockquote><p><a href="https://gitee.com/sqlsq_admin/cdn.git" target="_blank" rel="noopener">https://gitee.com/sqlsq_admin/cdn.git</a></p><p>创建仓库时务必要勾选一个初始化选项初始化仓库，否则后面上传时会失败</p></blockquote><p><img src="/" alt="image-20200501102755064" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501102755064.png"></p><h2 id="3、创建私人令牌"><a href="#3、创建私人令牌" class="headerlink" title="3、创建私人令牌"></a>3、创建私人令牌</h2><p>私人令牌：<a href="https://gitee.com/profile/personal_access_tokens/new" target="_blank" rel="noopener">https://gitee.com/profile/personal_access_tokens/new</a></p><p><img src="/" alt="image-20200501103017094" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501103017094.png"></p><p>生成成功如下：</p><p><img src="/" alt="image-20200501103107827" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501103107827.png"></p><h2 id="4、-设置GithubPlus"><a href="#4、-设置GithubPlus" class="headerlink" title="4、 设置GithubPlus"></a>4、 设置GithubPlus</h2><p>返回PicGO，点击图床设置-&gt; githubPlus ，填写repo，token和origin三项，token填写为上一步生成的token，origin选择gitee，repo填写为<code>sqlsq_admin/cdn</code></p><p><img src="/" alt="image-20200501103519675" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501103519675.png"></p><h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><blockquote><p>熟悉的都知道，这个记事本我推荐了好多次了。 并且也自己魔改了一些css样式。目前小编最钟爱的编辑器。</p><p><strong>完成以上操作即可正常使用你的PicGo了，如果你还经常使用typora的话可以继续设置你的typora</strong></p></blockquote><h2 id="1、配置图片"><a href="#1、配置图片" class="headerlink" title="1、配置图片"></a>1、配置图片</h2><p><img src="/" alt="image-20200501104916511" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501104916511.png"></p><h2 id="2、上传配置"><a href="#2、上传配置" class="headerlink" title="2、上传配置"></a>2、上传配置</h2><blockquote><p>建议开启 优先使用相对路径。</p><p>这样可以预览！</p></blockquote><p><img src="/" alt="image-20200501105924739" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501105924739.png"></p><h2 id="3、体验极速上传吧"><a href="#3、体验极速上传吧" class="headerlink" title="3、体验极速上传吧"></a>3、体验极速上传吧</h2><blockquote><p>推荐图床：</p><p>别问小编为什么，因为我穷付费的都用不起。</p><ol><li>Github <ol><li>免费</li><li>有时候容易失败</li></ol></li><li>GithubPlus — Gitee<ol><li>免费</li><li>高效</li><li>快捷</li></ol></li></ol></blockquote><p><img src="/" alt="image-20200501110528626" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501110528626.png"></p><p><strong>上传</strong></p><p><img src="/" alt="image-20200501110559052" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501110559052.png"></p><p><strong>上传成功</strong></p><p><img src="/" alt="image-20200501110848018" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501110848018.png"></p><h2 id="4、完美"><a href="#4、完美" class="headerlink" title="4、完美"></a>4、完美</h2><p><img src="/" alt="image-20200501110948817" class="lazyload" data-src="https://gitee.com/sqlsq_admin/cdn/raw/master/image-20200501110948817.png"></p><blockquote><p>至于图床的更多便捷就不一 一诉说了。  </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> Typroa </tag>
            
            <tag> MarkDown </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL测试</title>
      <link href="/2020/04/20/SQL%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/04/20/SQL%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>哪个文字最酷？<span class="hide-inline"><a class="hide-button button--primary button--animated" style="color:#fff;background-color:#FF7242">查看答案    </a><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><h2 id="美女"><a href="#美女" class="headerlink" title="美女"></a>美女</h2><div class="hide-block"><a class="hide-button button--primary button--animated" style="color:#fff;">查看答案    </a><span class="hide-content"><div class="justified-gallery"><p><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="/" alt="" class="lazyload" data-src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div></span></div>]]></content>
      
      
      
        <tags>
            
            <tag> SQL百炼 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
